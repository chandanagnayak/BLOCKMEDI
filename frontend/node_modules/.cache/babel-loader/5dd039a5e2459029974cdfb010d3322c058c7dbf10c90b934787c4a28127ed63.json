{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prathika\\\\OneDrive\\\\Desktop\\\\health\\\\healthcare-platform\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { ethers } from 'ethers';\n// import AuthABI from '../contracts/AuthContract.json'; // This is the ABI array directly\n// import './Login.css';\n// import { generateHash } from '../utils/hash';\n\n// const CONTRACT_ADDRESS = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\n\n// function Login() {\n//   const [activeTab, setActiveTab] = useState('login');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const hash = await generateHash(email, password);\n//     setLoading(true);\n//     setMessage('');\n\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('MetaMask is not installed! Please install MetaMask to continue.');\n//       }\n\n//       // Ensure MetaMask is connected\n//       const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n//       if (!accounts || accounts.length === 0) {\n//         throw new Error('MetaMask is not connected. Please connect your wallet.');\n//       }\n\n//       const provider = new ethers.BrowserProvider(window.ethereum);\n//       const signer = await provider.getSigner();\n\n//       // Check network\n//       const network = await provider.getNetwork();\n//       let contract;\n//       if (Number(network.chainId) !== 1) {\n//         try {\n//           await window.ethereum.request({\n//             method: 'wallet_switchEthereumChain',\n//             params: [{ chainId: '0x1' }],\n//           });\n//         } catch (switchError) {\n//           if (switchError.code === 4902 || switchError.message.includes('Unrecognized chain ID')) {\n//             try {\n//               await window.ethereum.request({\n//                 method: 'wallet_addEthereumChain',\n//                 params: [\n//                   {\n//                     chainId: '0x1',\n//                     chainName: 'Ethereum Mainnet',\n//                     rpcUrls: ['https://mainnet.infura.io/v3/bf9531dea07e4c8d8f280ec62b10db93'],\n//                     nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n//                     blockExplorerUrls: ['https://etherscan.io'],\n//                   },\n//                 ],\n//               });\n//             } catch (addError) {\n//               throw new Error('Failed to add Ethereum Mainnet. Please add it manually in MetaMask.');\n//             }\n//           } else if (switchError.code === 4001) {\n//             throw new Error('Network switch canceled. Please switch to Ethereum Mainnet manually in MetaMask.');\n//           } else {\n//             throw new Error(`Failed to switch to Ethereum Mainnet: ${switchError.message}. Please switch manually in MetaMask.`);\n//           }\n//         }\n\n//         // Refresh provider after network switch\n//         const updatedProvider = new ethers.BrowserProvider(window.ethereum);\n//         const updatedSigner = await updatedProvider.getSigner();\n\n//         // Debug ABI\n//         console.log('AuthABI:', AuthABI);\n\n//         // Check if AuthABI is an array\n//         if (!Array.isArray(AuthABI)) {\n//           throw new Error('AuthABI is not an array. Check the AuthContract.json file.');\n//         }\n\n//         contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI, updatedSigner); // Use AuthABI directly\n//       } else {\n//         // Debug ABI\n//         console.log('AuthABI:', AuthABI);\n\n//         // Check if AuthABI is an array\n//         if (!Array.isArray(AuthABI)) {\n//           throw new Error('AuthABI is not an array. Check the AuthContract.json file.');\n//         }\n\n//         contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI, signer); // Use AuthABI directly\n//       }\n\n//       if (!contract) {\n//         throw new Error('Failed to initialize contract. Check ABI and contract address.');\n//       }\n\n//       console.log('Email:', email);\n//       console.log('Generated hash:', hash);\n\n//       if (activeTab === 'register') {\n//         const tx = await contract.register(email, hash, { gasLimit: 300000 });\n//         await tx.wait();\n//         setMessage('‚úÖ Successfully registered on the blockchain!');\n//       } else if (activeTab === 'login') {\n//         const loginSuccess = await contract.login(email, hash);\n//         if (loginSuccess) {\n//           setMessage('‚úÖ Login successful!');\n//         } else {\n//           setMessage('‚ùå Invalid email or password!');\n//         }\n//       }\n//     } catch (error) {\n//       console.error('Contract interaction error:', error);\n//       setMessage(`‚ùó Error: ${error.message}. Check MetaMask & console.`);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-wrapper\">\n//       <div className=\"login-container\">\n//         <div className=\"logo-circle\">PB</div>\n//         <h1 className=\"brand-name\">policybazaar</h1>\n\n//         <div className=\"welcome-text\">\n//           <h2>Welcome to policybazaar</h2>\n//           <p>Login or create an account to manage your scheduling journey</p>\n//         </div>\n\n//         <div className=\"tabs\">\n//           <button\n//             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\n//             onClick={() => setActiveTab('login')}\n//           >\n//             Login\n//           </button>\n//           <button\n//             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\n//             onClick={() => setActiveTab('register')}\n//           >\n//             Register\n//           </button>\n//         </div>\n\n//         <form onSubmit={handleSubmit} className=\"form\">\n//           <div className=\"input-group\">\n//             <span className=\"input-icon\">üìß</span>\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               value={email}\n//               required\n//               onChange={(e) => setEmail(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"input-group\">\n//             <span className=\"input-icon\">üîí</span>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               required\n//               onChange={(e) => setPassword(e.target.value)}\n//             />\n//           </div>\n\n//           <div className=\"form-options\">\n//             <label className=\"remember-me\">\n//               <input type=\"checkbox\" /> I agree to the terms and conditions\n//             </label>\n//           </div>\n\n//           <button type=\"submit\" className=\"login-button\" disabled={loading}>\n//             <span className=\"button-icon\">üîì</span>\n//             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\n//           </button>\n//         </form>\n\n//         {message && (\n//           <p\n//             style={{\n//               textAlign: 'center',\n//               color: message.includes('‚úÖ') ? 'green' : 'red',\n//               marginTop: '10px',\n//             }}\n//           >\n//             {message}\n//           </p>\n//         )}\n\n//         <div className=\"footer\">\n//           <p>\n//             By using policybazaar, you agree to our{' '}\n//             <a href=\"#terms\">Terms of Service</a> and{' '}\n//             <a href=\"#privacy\">Privacy Policy</a>.\n//           </p>\n//         </div>\n\n//         <div className=\"tags\">\n//           <span className=\"tag\">Secure login</span>\n//           <span className=\"tag\">Data privacy</span>\n//           <span className=\"tag\">Personalized scheduling</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport AuthABI from '../contracts/AuthContract.json'; // ABI as array\nimport './Login.css';\nimport { generateHash } from '../utils/hash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = '0xfb253159C7024b19Ae16f3A4A1cD7968bef2f0e2'; // ‚¨ÖÔ∏è Replace this\n\nfunction Login() {\n  _s();\n  const [activeTab, setActiveTab] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const hash = await generateHash(email, password);\n    setLoading(true);\n    setMessage('');\n    try {\n      if (!window.ethereum) {\n        throw new Error('MetaMask is not installed! Please install MetaMask to continue.');\n      }\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      if (!accounts || accounts.length === 0) {\n        throw new Error('MetaMask is not connected. Please connect your wallet.');\n      }\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const network = await provider.getNetwork();\n      let contract;\n      if (Number(network.chainId) !== 11155111) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{\n              chainId: '0xaa36a7'\n            }]\n          });\n        } catch (switchError) {\n          if (switchError.code === 4902 || switchError.message.includes('Unrecognized chain ID')) {\n            try {\n              await window.ethereum.request({\n                method: 'wallet_addEthereumChain',\n                params: [{\n                  chainId: '0xaa36a7',\n                  chainName: 'Sepolia Testnet',\n                  rpcUrls: ['https://sepolia.infura.io/v3/bf9531dea07e4c8d8f280ec62b10db93'],\n                  // ‚¨ÖÔ∏è Replace with real project ID\n                  nativeCurrency: {\n                    name: 'Sepolia ETH',\n                    symbol: 'SEP',\n                    decimals: 18\n                  },\n                  blockExplorerUrls: ['https://sepolia.etherscan.io']\n                }]\n              });\n            } catch (addError) {\n              throw new Error('Failed to add Sepolia network. Please add it manually in MetaMask.');\n            }\n          } else if (switchError.code === 4001) {\n            throw new Error('Network switch canceled. Please switch to Sepolia manually in MetaMask.');\n          } else {\n            throw new Error(`Failed to switch to Sepolia: ${switchError.message}.`);\n          }\n        }\n\n        // Refresh provider after network switch\n        const updatedProvider = new ethers.BrowserProvider(window.ethereum);\n        const updatedSigner = await updatedProvider.getSigner();\n        contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI, updatedSigner);\n      } else {\n        contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI, signer);\n      }\n      if (!contract) {\n        throw new Error('Failed to initialize contract. Check ABI and contract address.');\n      }\n      if (activeTab === 'register') {\n        const tx = await contract.register(email, hash, {\n          gasLimit: 300000\n        });\n        await tx.wait();\n        setMessage('‚úÖ Successfully registered on the blockchain!');\n      } else if (activeTab === 'login') {\n        const loginSuccess = await contract.login(email, hash);\n        if (loginSuccess) {\n          setMessage('‚úÖ Login successful!');\n        } else {\n          setMessage('‚ùå Invalid email or password!');\n        }\n      }\n    } catch (error) {\n      console.error('Contract interaction error:', error);\n      setMessage(`‚ùó Error: ${error.message}. Check MetaMask & console.`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-circle\",\n        children: \"PB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"brand-name\",\n        children: \"policybazaar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to policybazaar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Login or create an account to manage your scheduling journey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'login' ? 'active' : ''}`,\n          onClick: () => setActiveTab('login'),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'register' ? 'active' : ''}`,\n          onClick: () => setActiveTab('register'),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-icon\",\n            children: \"\\uD83D\\uDCE7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            required: true,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-icon\",\n            children: \"\\uD83D\\uDD12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            required: true,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-options\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"remember-me\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), \" I agree to the terms and conditions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          disabled: loading,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"button-icon\",\n            children: \"\\uD83D\\uDD13\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          color: message.includes('‚úÖ') ? 'green' : 'red',\n          marginTop: '10px'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"By using policybazaar, you agree to our\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#terms\",\n            children: \"Terms of Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), \" and\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#privacy\",\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag\",\n          children: \"Secure login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag\",\n          children: \"Data privacy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag\",\n          children: \"Personalized scheduling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"JeW6da8tEjf+1N9HBvRHDWGpL78=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","ethers","AuthABI","generateHash","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","Login","_s","activeTab","setActiveTab","email","setEmail","password","setPassword","message","setMessage","loading","setLoading","handleSubmit","e","preventDefault","hash","window","ethereum","Error","accounts","request","method","length","provider","BrowserProvider","signer","getSigner","network","getNetwork","contract","Number","chainId","params","switchError","code","includes","chainName","rpcUrls","nativeCurrency","name","symbol","decimals","blockExplorerUrls","addError","updatedProvider","updatedSigner","Contract","tx","register","gasLimit","wait","loginSuccess","login","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","required","onChange","target","disabled","style","textAlign","color","marginTop","href","_c","$RefreshReg$"],"sources":["C:/Users/Prathika/OneDrive/Desktop/health/healthcare-platform/frontend/src/pages/Login.js"],"sourcesContent":["\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { ethers } from 'ethers';\r\n// import AuthABI from '../contracts/AuthContract.json'; // This is the ABI array directly\r\n// import './Login.css';\r\n// import { generateHash } from '../utils/hash';\r\n\r\n// const CONTRACT_ADDRESS = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\r\n\r\n// function Login() {\r\n//   const [activeTab, setActiveTab] = useState('login');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const hash = await generateHash(email, password);\r\n//     setLoading(true);\r\n//     setMessage('');\r\n\r\n//     try {\r\n//       if (!window.ethereum) {\r\n//         throw new Error('MetaMask is not installed! Please install MetaMask to continue.');\r\n//       }\r\n\r\n//       // Ensure MetaMask is connected\r\n//       const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n//       if (!accounts || accounts.length === 0) {\r\n//         throw new Error('MetaMask is not connected. Please connect your wallet.');\r\n//       }\r\n\r\n//       const provider = new ethers.BrowserProvider(window.ethereum);\r\n//       const signer = await provider.getSigner();\r\n\r\n//       // Check network\r\n//       const network = await provider.getNetwork();\r\n//       let contract;\r\n//       if (Number(network.chainId) !== 1) {\r\n//         try {\r\n//           await window.ethereum.request({\r\n//             method: 'wallet_switchEthereumChain',\r\n//             params: [{ chainId: '0x1' }],\r\n//           });\r\n//         } catch (switchError) {\r\n//           if (switchError.code === 4902 || switchError.message.includes('Unrecognized chain ID')) {\r\n//             try {\r\n//               await window.ethereum.request({\r\n//                 method: 'wallet_addEthereumChain',\r\n//                 params: [\r\n//                   {\r\n//                     chainId: '0x1',\r\n//                     chainName: 'Ethereum Mainnet',\r\n//                     rpcUrls: ['https://mainnet.infura.io/v3/bf9531dea07e4c8d8f280ec62b10db93'],\r\n//                     nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\r\n//                     blockExplorerUrls: ['https://etherscan.io'],\r\n//                   },\r\n//                 ],\r\n//               });\r\n//             } catch (addError) {\r\n//               throw new Error('Failed to add Ethereum Mainnet. Please add it manually in MetaMask.');\r\n//             }\r\n//           } else if (switchError.code === 4001) {\r\n//             throw new Error('Network switch canceled. Please switch to Ethereum Mainnet manually in MetaMask.');\r\n//           } else {\r\n//             throw new Error(`Failed to switch to Ethereum Mainnet: ${switchError.message}. Please switch manually in MetaMask.`);\r\n//           }\r\n//         }\r\n\r\n//         // Refresh provider after network switch\r\n//         const updatedProvider = new ethers.BrowserProvider(window.ethereum);\r\n//         const updatedSigner = await updatedProvider.getSigner();\r\n\r\n//         // Debug ABI\r\n//         console.log('AuthABI:', AuthABI);\r\n\r\n//         // Check if AuthABI is an array\r\n//         if (!Array.isArray(AuthABI)) {\r\n//           throw new Error('AuthABI is not an array. Check the AuthContract.json file.');\r\n//         }\r\n\r\n//         contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI, updatedSigner); // Use AuthABI directly\r\n//       } else {\r\n//         // Debug ABI\r\n//         console.log('AuthABI:', AuthABI);\r\n\r\n//         // Check if AuthABI is an array\r\n//         if (!Array.isArray(AuthABI)) {\r\n//           throw new Error('AuthABI is not an array. Check the AuthContract.json file.');\r\n//         }\r\n\r\n//         contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI, signer); // Use AuthABI directly\r\n//       }\r\n\r\n//       if (!contract) {\r\n//         throw new Error('Failed to initialize contract. Check ABI and contract address.');\r\n//       }\r\n\r\n//       console.log('Email:', email);\r\n//       console.log('Generated hash:', hash);\r\n\r\n//       if (activeTab === 'register') {\r\n//         const tx = await contract.register(email, hash, { gasLimit: 300000 });\r\n//         await tx.wait();\r\n//         setMessage('‚úÖ Successfully registered on the blockchain!');\r\n//       } else if (activeTab === 'login') {\r\n//         const loginSuccess = await contract.login(email, hash);\r\n//         if (loginSuccess) {\r\n//           setMessage('‚úÖ Login successful!');\r\n//         } else {\r\n//           setMessage('‚ùå Invalid email or password!');\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Contract interaction error:', error);\r\n//       setMessage(`‚ùó Error: ${error.message}. Check MetaMask & console.`);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-wrapper\">\r\n//       <div className=\"login-container\">\r\n//         <div className=\"logo-circle\">PB</div>\r\n//         <h1 className=\"brand-name\">policybazaar</h1>\r\n\r\n//         <div className=\"welcome-text\">\r\n//           <h2>Welcome to policybazaar</h2>\r\n//           <p>Login or create an account to manage your scheduling journey</p>\r\n//         </div>\r\n\r\n//         <div className=\"tabs\">\r\n//           <button\r\n//             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\r\n//             onClick={() => setActiveTab('login')}\r\n//           >\r\n//             Login\r\n//           </button>\r\n//           <button\r\n//             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\r\n//             onClick={() => setActiveTab('register')}\r\n//           >\r\n//             Register\r\n//           </button>\r\n//         </div>\r\n\r\n//         <form onSubmit={handleSubmit} className=\"form\">\r\n//           <div className=\"input-group\">\r\n//             <span className=\"input-icon\">üìß</span>\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"Email\"\r\n//               value={email}\r\n//               required\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <span className=\"input-icon\">üîí</span>\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Password\"\r\n//               value={password}\r\n//               required\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-options\">\r\n//             <label className=\"remember-me\">\r\n//               <input type=\"checkbox\" /> I agree to the terms and conditions\r\n//             </label>\r\n//           </div>\r\n\r\n//           <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n//             <span className=\"button-icon\">üîì</span>\r\n//             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\r\n//           </button>\r\n//         </form>\r\n\r\n//         {message && (\r\n//           <p\r\n//             style={{\r\n//               textAlign: 'center',\r\n//               color: message.includes('‚úÖ') ? 'green' : 'red',\r\n//               marginTop: '10px',\r\n//             }}\r\n//           >\r\n//             {message}\r\n//           </p>\r\n//         )}\r\n\r\n//         <div className=\"footer\">\r\n//           <p>\r\n//             By using policybazaar, you agree to our{' '}\r\n//             <a href=\"#terms\">Terms of Service</a> and{' '}\r\n//             <a href=\"#privacy\">Privacy Policy</a>.\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"tags\">\r\n//           <span className=\"tag\">Secure login</span>\r\n//           <span className=\"tag\">Data privacy</span>\r\n//           <span className=\"tag\">Personalized scheduling</span>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport AuthABI from '../contracts/AuthContract.json'; // ABI as array\r\nimport './Login.css';\r\nimport { generateHash } from '../utils/hash';\r\n\r\nconst CONTRACT_ADDRESS = '0xfb253159C7024b19Ae16f3A4A1cD7968bef2f0e2'; // ‚¨ÖÔ∏è Replace this\r\n\r\nfunction Login() {\r\n  const [activeTab, setActiveTab] = useState('login');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const hash = await generateHash(email, password);\r\n    setLoading(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      if (!window.ethereum) {\r\n        throw new Error('MetaMask is not installed! Please install MetaMask to continue.');\r\n      }\r\n\r\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      if (!accounts || accounts.length === 0) {\r\n        throw new Error('MetaMask is not connected. Please connect your wallet.');\r\n      }\r\n\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      const signer = await provider.getSigner();\r\n      const network = await provider.getNetwork();\r\n\r\n      let contract;\r\n\r\n      if (Number(network.chainId) !== 11155111) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_switchEthereumChain',\r\n            params: [{ chainId: '0xaa36a7' }],\r\n          });\r\n        } catch (switchError) {\r\n          if (switchError.code === 4902 || switchError.message.includes('Unrecognized chain ID')) {\r\n            try {\r\n              await window.ethereum.request({\r\n                method: 'wallet_addEthereumChain',\r\n                params: [\r\n                  {\r\n                    chainId: '0xaa36a7',\r\n                    chainName: 'Sepolia Testnet',\r\n                    rpcUrls: ['https://sepolia.infura.io/v3/bf9531dea07e4c8d8f280ec62b10db93'], // ‚¨ÖÔ∏è Replace with real project ID\r\n                    nativeCurrency: {\r\n                      name: 'Sepolia ETH',\r\n                      symbol: 'SEP',\r\n                      decimals: 18,\r\n                    },\r\n                    blockExplorerUrls: ['https://sepolia.etherscan.io'],\r\n                  },\r\n                ],\r\n              });\r\n            } catch (addError) {\r\n              throw new Error('Failed to add Sepolia network. Please add it manually in MetaMask.');\r\n            }\r\n          } else if (switchError.code === 4001) {\r\n            throw new Error('Network switch canceled. Please switch to Sepolia manually in MetaMask.');\r\n          } else {\r\n            throw new Error(`Failed to switch to Sepolia: ${switchError.message}.`);\r\n          }\r\n        }\r\n\r\n        // Refresh provider after network switch\r\n        const updatedProvider = new ethers.BrowserProvider(window.ethereum);\r\n        const updatedSigner = await updatedProvider.getSigner();\r\n\r\n        contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI, updatedSigner);\r\n      } else {\r\n        contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI, signer);\r\n      }\r\n\r\n      if (!contract) {\r\n        throw new Error('Failed to initialize contract. Check ABI and contract address.');\r\n      }\r\n\r\n      if (activeTab === 'register') {\r\n        const tx = await contract.register(email, hash, { gasLimit: 300000 });\r\n        await tx.wait();\r\n        setMessage('‚úÖ Successfully registered on the blockchain!');\r\n      } else if (activeTab === 'login') {\r\n        const loginSuccess = await contract.login(email, hash);\r\n        if (loginSuccess) {\r\n          setMessage('‚úÖ Login successful!');\r\n        } else {\r\n          setMessage('‚ùå Invalid email or password!');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Contract interaction error:', error);\r\n      setMessage(`‚ùó Error: ${error.message}. Check MetaMask & console.`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-wrapper\">\r\n      <div className=\"login-container\">\r\n        <div className=\"logo-circle\">PB</div>\r\n        <h1 className=\"brand-name\">policybazaar</h1>\r\n\r\n        <div className=\"welcome-text\">\r\n          <h2>Welcome to policybazaar</h2>\r\n          <p>Login or create an account to manage your scheduling journey</p>\r\n        </div>\r\n\r\n        <div className=\"tabs\">\r\n          <button\r\n            className={`tab ${activeTab === 'login' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('login')}\r\n          >\r\n            Login\r\n          </button>\r\n          <button\r\n            className={`tab ${activeTab === 'register' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('register')}\r\n          >\r\n            Register\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"form\">\r\n          <div className=\"input-group\">\r\n            <span className=\"input-icon\">üìß</span>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              required\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <span className=\"input-icon\">üîí</span>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              required\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-options\">\r\n            <label className=\"remember-me\">\r\n              <input type=\"checkbox\" /> I agree to the terms and conditions\r\n            </label>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n            <span className=\"button-icon\">üîì</span>\r\n            {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\r\n          </button>\r\n        </form>\r\n\r\n        {message && (\r\n          <p\r\n            style={{\r\n              textAlign: 'center',\r\n              color: message.includes('‚úÖ') ? 'green' : 'red',\r\n              marginTop: '10px',\r\n            }}\r\n          >\r\n            {message}\r\n          </p>\r\n        )}\r\n\r\n        <div className=\"footer\">\r\n          <p>\r\n            By using policybazaar, you agree to our{' '}\r\n            <a href=\"#terms\">Terms of Service</a> and{' '}\r\n            <a href=\"#privacy\">Privacy Policy</a>.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"tags\">\r\n          <span className=\"tag\">Secure login</span>\r\n          <span className=\"tag\">Data privacy</span>\r\n          <span className=\"tag\">Personalized scheduling</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,OAAO,MAAM,gCAAgC,CAAC,CAAC;AACtD,OAAO,aAAa;AACpB,SAASC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,gBAAgB,GAAG,4CAA4C,CAAC,CAAC;;AAEvE,SAASC,KAAKA,CAAA,EAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}