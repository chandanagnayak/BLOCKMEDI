{"ast":null,"code":"// // import React, { useState } from 'react';\n// // import { ethers } from 'ethers';\n// // import { JsonRpcProvider } from 'ethers';  // Import JsonRpcProvider\n// // import AuthABI from '../contracts/AuthContract.json';\n// // import './Login.css';\n// // import { generateHash } from '../utils/hash'; // ‚úÖ Your hash function\n// // const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // üîÅ Ensure this matches your deployed contract\n// // function Login() {\n// //   const [activeTab, setActiveTab] = useState('login');\n// //   const [email, setEmail] = useState('');\n// //   const [password, setPassword] = useState('');\n// //   const [message, setMessage] = useState('');\n// //   const [loading, setLoading] = useState(false);\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const hash = await generateHash(email, password);\n// //     setLoading(true);\n// //     setMessage('');\n// //     try {\n// //       if (!window.ethereum) {\n// //         throw new Error('MetaMask is not installed!');\n// //       }\n// //       await window.ethereum.request({ method: 'eth_requestAccounts' });\n// //       // Replace the Web3Provider with JsonRpcProvider\n// //       const provider = new JsonRpcProvider('https://mainnet.infura.io/v3/bf9531dea07e4c8d8f280ec62b10db93');\n// //       const signer = provider.getSigner();\n// //       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\n// //       if (activeTab === 'register') {\n// //         const tx = await contract.register(email, hash);\n// //         await tx.wait();  // Wait for the transaction to be mined\n// //         setMessage('‚úÖ Successfully registered on the blockchain!');\n// //       } else if (activeTab === 'login') {\n// //         const loginSuccess = await contract.login(email, hash);  // This should return a boolean\n// //         if (loginSuccess) {\n// //           setMessage('‚úÖ Login successful!');\n// //         } else {\n// //           setMessage('‚ùå Invalid email or password!');\n// //         }\n// //       }\n// //     } catch (error) {\n// //       console.error(error);\n// //       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n// //   return (\n// //     <div className=\"login-wrapper\">\n// //       <div className=\"login-container\">\n// //         <div className=\"logo-circle\">PB</div>\n// //         <h1 className=\"brand-name\">policybazaar</h1>\n// //         <div className=\"welcome-text\">\n// //           <h2>Welcome to policybazaar</h2>\n// //           <p>Login or create an account to manage your scheduling journey</p>\n// //         </div>\n// //         <div className=\"tabs\">\n// //           <button\n// //             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\n// //             onClick={() => setActiveTab('login')}\n// //           >\n// //             Login\n// //           </button>\n// //           <button\n// //             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\n// //             onClick={() => setActiveTab('register')}\n// //           >\n// //             Register\n// //           </button>\n// //         </div>\n// //         <form onSubmit={handleSubmit} className=\"form\">\n// //           <div className=\"input-group\">\n// //             <span className=\"input-icon\">üìß</span>\n// //             <input\n// //               type=\"email\"\n// //               placeholder=\"Email\"\n// //               value={email}\n// //               required\n// //               onChange={(e) => setEmail(e.target.value)}\n// //             />\n// //           </div>\n// //           <div className=\"input-group\">\n// //             <span className=\"input-icon\">üîí</span>\n// //             <input\n// //               type=\"password\"\n// //               placeholder=\"Password\"\n// //               value={password}\n// //               required\n// //               onChange={(e) => setPassword(e.target.value)}\n// //             />\n// //           </div>\n// //           <div className=\"form-options\">\n// //             <label className=\"remember-me\">\n// //               <input type=\"checkbox\" /> I agree to the terms and conditions\n// //             </label>\n// //           </div>\n// //           <button type=\"submit\" className=\"login-button\" disabled={loading}>\n// //             <span className=\"button-icon\">üîì</span>\n// //             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\n// //           </button>\n// //         </form>\n// //         {message && (\n// //           <p\n// //             style={{\n// //               textAlign: 'center',\n// //               color: message.includes('‚úÖ') ? 'green' : 'red',\n// //               marginTop: '10px',\n// //             }}\n// //           >\n// //             {message}\n// //           </p>\n// //         )}\n// //         <div className=\"footer\">\n// //           <p>\n// //             By using policybazaar, you agree to our{' '}\n// //             <a href=\"#terms\">Terms of Service</a> and{' '}\n// //             <a href=\"#privacy\">Privacy Policy</a>.\n// //           </p>\n// //         </div>\n// //         <div className=\"tags\">\n// //           <span className=\"tag\">Secure login</span>\n// //           <span className=\"tag\">Data privacy</span>\n// //           <span className=\"tag\">Personalized scheduling</span>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n// // export default Login;\n// import React, { useState } from 'react';\n// import { ethers } from 'ethers'; // ‚úÖ All you need\n// import AuthABI from '../contracts/AuthContract.json';\n// import './Login.css';\n// import { generateHash } from '../utils/hash'; // ‚úÖ Your hash function\n// const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Ensure this matches your deployed contract\n// function Login() {\n//   const [activeTab, setActiveTab] = useState('login');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const hash = await generateHash(email, password);\n//     setLoading(true);\n//     setMessage('');\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('MetaMask is not installed!');\n//       }\n//       await window.ethereum.request({ method: 'eth_requestAccounts' });\n//       const provider = new ethers.BrowserProvider(window.ethereum); // ‚úÖ MetaMask provider\n//       const signer = await provider.getSigner(); // ‚úÖ Get signer from MetaMask\n//       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\n//       if (activeTab === 'register') {\n//         const tx = await contract.register(email, hash);\n//         await tx.wait();\n//         setMessage('‚úÖ Successfully registered on the blockchain!');\n//       } else if (activeTab === 'login') {\n//         const loginSuccess = await contract.login(email, hash);\n//         if (loginSuccess) {\n//           setMessage('‚úÖ Login successful!');\n//         } else {\n//           setMessage('‚ùå Invalid email or password!');\n//         }\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n//   return (\n//     <div className=\"login-wrapper\">\n//       <div className=\"login-container\">\n//         <div className=\"logo-circle\">PB</div>\n//         <h1 className=\"brand-name\">policybazaar</h1>\n//         <div className=\"welcome-text\">\n//           <h2>Welcome to policybazaar</h2>\n//           <p>Login or create an account to manage your scheduling journey</p>\n//         </div>\n//         <div className=\"tabs\">\n//           <button\n//             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\n//             onClick={() => setActiveTab('login')}\n//           >\n//             Login\n//           </button>\n//           <button\n//             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\n//             onClick={() => setActiveTab('register')}\n//           >\n//             Register\n//           </button>\n//         </div>\n//         <form onSubmit={handleSubmit} className=\"form\">\n//           <div className=\"input-group\">\n//             <span className=\"input-icon\">üìß</span>\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               value={email}\n//               required\n//               onChange={(e) => setEmail(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"input-group\">\n//             <span className=\"input-icon\">üîí</span>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               required\n//               onChange={(e) => setPassword(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"form-options\">\n//             <label className=\"remember-me\">\n//               <input type=\"checkbox\" /> I agree to the terms and conditions\n//             </label>\n//           </div>\n//           <button type=\"submit\" className=\"login-button\" disabled={loading}>\n//             <span className=\"button-icon\">üîì</span>\n//             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\n//           </button>\n//         </form>\n//         {message && (\n//           <p\n//             style={{\n//               textAlign: 'center',\n//               color: message.includes('‚úÖ') ? 'green' : 'red',\n//               marginTop: '10px',\n//             }}\n//           >\n//             {message}\n//           </p>\n//         )}\n//         <div className=\"footer\">\n//           <p>\n//             By using policybazaar, you agree to our{' '}\n//             <a href=\"#terms\">Terms of Service</a> and{' '}\n//             <a href=\"#privacy\">Privacy Policy</a>.\n//           </p>\n//         </div>\n//         <div className=\"tags\">\n//           <span className=\"tag\">Secure login</span>\n//           <span className=\"tag\">Data privacy</span>\n//           <span className=\"tag\">Personalized scheduling</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// export default Login;\n// import React, { useState } from 'react';\n// import { ethers } from 'ethers';\n// import AuthABI from '../contracts/AuthContract.json';\n// import './Login.css';\n// import { generateHash } from '../utils/hash';\n// const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // üîÅ Your deployed address\n// function Login() {\n//   const [activeTab, setActiveTab] = useState('login');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const hash = await generateHash(email, password);\n//     setLoading(true);\n//     setMessage('');\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('MetaMask is not installed!');\n//       }\n//       await window.ethereum.request({ method: 'eth_requestAccounts' });\n//       const provider = new ethers.BrowserProvider(window.ethereum); // ‚úÖ Ethers v6\n//       const signer = await provider.getSigner(); // ‚úÖ Note the await\n//       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\n//       if (activeTab === 'register') {\n//         const tx = await contract.register(email, hash);\n//         await tx.wait();\n//         setMessage('‚úÖ Successfully registered on the blockchain!');\n//       } else if (activeTab === 'login') {\n//         const loginSuccess = await contract.login(email, hash);\n//         if (loginSuccess) {\n//           setMessage('‚úÖ Login successful!');\n//         } else {\n//           setMessage('‚ùå Invalid email or password!');\n//         }\n//       }\n//     } catch (error) {\n//       console.error('Error:', error.reason || error.message || error);\n//       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n//   return (\n//     <div className=\"login-wrapper\">\n//       <div className=\"login-container\">\n//         <div className=\"logo-circle\">PB</div>\n//         <h1 className=\"brand-name\">policybazaar</h1>\n//         <div className=\"welcome-text\">\n//           <h2>Welcome to policybazaar</h2>\n//           <p>Login or create an account to manage your scheduling journey</p>\n//         </div>\n//         <div className=\"tabs\">\n//           <button\n//             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\n//             onClick={() => setActiveTab('login')}\n//           >\n//             Login\n//           </button>\n//           <button\n//             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\n//             onClick={() => setActiveTab('register')}\n//           >\n//             Register\n//           </button>\n//         </div>\n//         <form onSubmit={handleSubmit} className=\"form\">\n//           <div className=\"input-group\">\n//             <span className=\"input-icon\">üìß</span>\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               value={email}\n//               required\n//               onChange={(e) => setEmail(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"input-group\">\n//             <span className=\"input-icon\">üîí</span>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               required\n//               onChange={(e) => setPassword(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"form-options\">\n//             <label className=\"remember-me\">\n//               <input type=\"checkbox\" /> I agree to the terms and conditions\n//             </label>\n//           </div>\n//           <button type=\"submit\" className=\"login-button\" disabled={loading}>\n//             <span className=\"button-icon\">üîì</span>\n//             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\n//           </button>\n//         </form>\n//         {message && (\n//           <p\n//             style={{\n//               textAlign: 'center',\n//               color: message.includes('‚úÖ') ? 'green' : 'red',\n//               marginTop: '10px',\n//             }}\n//           >\n//             {message}\n//           </p>\n//         )}\n//         <div className=\"footer\">\n//           <p>\n//             By using policybazaar, you agree to our{' '}\n//             <a href=\"#terms\">Terms of Service</a> and{' '}\n//             <a href=\"#privacy\">Privacy Policy</a>.\n//           </p>\n//         </div>\n//         <div className=\"tags\">\n//           <span className=\"tag\">Secure login</span>\n//           <span className=\"tag\">Data privacy</span>\n//           <span className=\"tag\">Personalized scheduling</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// export default Login;\nimport React,{useState}from'react';import{ethers}from'ethers';import AuthABI from'../contracts/AuthContract.json';import'./Login.css';import{generateHash}from'../utils/hash';// ‚úÖ Hash function\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CONTRACT_ADDRESS='0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512';// ‚úÖ Your deployed contract\nfunction Login(){const[activeTab,setActiveTab]=useState('login');const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[message,setMessage]=useState('');const[loading,setLoading]=useState(false);const handleSubmit=async e=>{e.preventDefault();const hash=await generateHash(email,password);setLoading(true);setMessage('');try{if(!window.ethereum){throw new Error('MetaMask is not installed!');}// ‚úÖ Use MetaMask-connected Web3 provider\nconst provider=new ethers.providers.Web3Provider(window.ethereum);await provider.send(\"eth_requestAccounts\",[]);const signer=provider.getSigner();const contract=new ethers.Contract(CONTRACT_ADDRESS,AuthABI.abi,signer);if(activeTab==='register'){const tx=await contract.register(email,hash);await tx.wait();// Wait for the transaction to be mined\nsetMessage('‚úÖ Successfully registered on the blockchain!');}else if(activeTab==='login'){const loginSuccess=await contract.login(email,hash);// Should return boolean\nif(loginSuccess){setMessage('‚úÖ Login successful!');}else{setMessage('‚ùå Invalid email or password!');}}}catch(error){console.error(error);setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"login-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo-circle\",children:\"PB\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"brand-name\",children:\"policybazaar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-text\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Welcome to policybazaar\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Login or create an account to manage your scheduling journey\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`tab ${activeTab==='login'?'active':''}`,onClick:()=>setActiveTab('login'),children:\"Login\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab ${activeTab==='register'?'active':''}`,onClick:()=>setActiveTab('register'),children:\"Register\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"input-icon\",children:\"\\uD83D\\uDCE7\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,required:true,onChange:e=>setEmail(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"input-icon\",children:\"\\uD83D\\uDD12\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,required:true,onChange:e=>setPassword(e.target.value)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-options\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"remember-me\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\"}),\" I agree to the terms and conditions\"]})}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:\"login-button\",disabled:loading,children:[/*#__PURE__*/_jsx(\"span\",{className:\"button-icon\",children:\"\\uD83D\\uDD13\"}),loading?'Processing...':activeTab==='login'?'Login':'Create account']})]}),message&&/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',color:message.includes('‚úÖ')?'green':'red',marginTop:'10px'},children:message}),/*#__PURE__*/_jsx(\"div\",{className:\"footer\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"By using policybazaar, you agree to our\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"#terms\",children:\"Terms of Service\"}),\" and\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"#privacy\",children:\"Privacy Policy\"}),\".\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"tags\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"tag\",children:\"Secure login\"}),/*#__PURE__*/_jsx(\"span\",{className:\"tag\",children:\"Data privacy\"}),/*#__PURE__*/_jsx(\"span\",{className:\"tag\",children:\"Personalized scheduling\"})]})]})});}export default Login;","map":{"version":3,"names":["React","useState","ethers","AuthABI","generateHash","jsx","_jsx","jsxs","_jsxs","CONTRACT_ADDRESS","Login","activeTab","setActiveTab","email","setEmail","password","setPassword","message","setMessage","loading","setLoading","handleSubmit","e","preventDefault","hash","window","ethereum","Error","provider","providers","Web3Provider","send","signer","getSigner","contract","Contract","abi","tx","register","wait","loginSuccess","login","error","console","className","children","onClick","onSubmit","type","placeholder","value","required","onChange","target","disabled","style","textAlign","color","includes","marginTop","href"],"sources":["C:/Users/Prathika/OneDrive/Desktop/health/healthcare-platform/frontend/src/pages/Login.js"],"sourcesContent":["\r\n\r\n\r\n\r\n// // import React, { useState } from 'react';\r\n// // import { ethers } from 'ethers';\r\n// // import { JsonRpcProvider } from 'ethers';  // Import JsonRpcProvider\r\n// // import AuthABI from '../contracts/AuthContract.json';\r\n// // import './Login.css';\r\n// // import { generateHash } from '../utils/hash'; // ‚úÖ Your hash function\r\n\r\n// // const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // üîÅ Ensure this matches your deployed contract\r\n\r\n// // function Login() {\r\n// //   const [activeTab, setActiveTab] = useState('login');\r\n// //   const [email, setEmail] = useState('');\r\n// //   const [password, setPassword] = useState('');\r\n// //   const [message, setMessage] = useState('');\r\n// //   const [loading, setLoading] = useState(false);\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     const hash = await generateHash(email, password);\r\n// //     setLoading(true);\r\n// //     setMessage('');\r\n\r\n// //     try {\r\n// //       if (!window.ethereum) {\r\n// //         throw new Error('MetaMask is not installed!');\r\n// //       }\r\n\r\n// //       await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      \r\n// //       // Replace the Web3Provider with JsonRpcProvider\r\n// //       const provider = new JsonRpcProvider('https://mainnet.infura.io/v3/bf9531dea07e4c8d8f280ec62b10db93');\r\n// //       const signer = provider.getSigner();\r\n// //       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\r\n\r\n// //       if (activeTab === 'register') {\r\n// //         const tx = await contract.register(email, hash);\r\n// //         await tx.wait();  // Wait for the transaction to be mined\r\n// //         setMessage('‚úÖ Successfully registered on the blockchain!');\r\n// //       } else if (activeTab === 'login') {\r\n// //         const loginSuccess = await contract.login(email, hash);  // This should return a boolean\r\n// //         if (loginSuccess) {\r\n// //           setMessage('‚úÖ Login successful!');\r\n// //         } else {\r\n// //           setMessage('‚ùå Invalid email or password!');\r\n// //         }\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error(error);\r\n// //       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"login-wrapper\">\r\n// //       <div className=\"login-container\">\r\n// //         <div className=\"logo-circle\">PB</div>\r\n// //         <h1 className=\"brand-name\">policybazaar</h1>\r\n\r\n// //         <div className=\"welcome-text\">\r\n// //           <h2>Welcome to policybazaar</h2>\r\n// //           <p>Login or create an account to manage your scheduling journey</p>\r\n// //         </div>\r\n\r\n// //         <div className=\"tabs\">\r\n// //           <button\r\n// //             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\r\n// //             onClick={() => setActiveTab('login')}\r\n// //           >\r\n// //             Login\r\n// //           </button>\r\n// //           <button\r\n// //             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\r\n// //             onClick={() => setActiveTab('register')}\r\n// //           >\r\n// //             Register\r\n// //           </button>\r\n// //         </div>\r\n\r\n// //         <form onSubmit={handleSubmit} className=\"form\">\r\n// //           <div className=\"input-group\">\r\n// //             <span className=\"input-icon\">üìß</span>\r\n// //             <input\r\n// //               type=\"email\"\r\n// //               placeholder=\"Email\"\r\n// //               value={email}\r\n// //               required\r\n// //               onChange={(e) => setEmail(e.target.value)}\r\n// //             />\r\n// //           </div>\r\n// //           <div className=\"input-group\">\r\n// //             <span className=\"input-icon\">üîí</span>\r\n// //             <input\r\n// //               type=\"password\"\r\n// //               placeholder=\"Password\"\r\n// //               value={password}\r\n// //               required\r\n// //               onChange={(e) => setPassword(e.target.value)}\r\n// //             />\r\n// //           </div>\r\n\r\n// //           <div className=\"form-options\">\r\n// //             <label className=\"remember-me\">\r\n// //               <input type=\"checkbox\" /> I agree to the terms and conditions\r\n// //             </label>\r\n// //           </div>\r\n\r\n// //           <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n// //             <span className=\"button-icon\">üîì</span>\r\n// //             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\r\n// //           </button>\r\n// //         </form>\r\n\r\n// //         {message && (\r\n// //           <p\r\n// //             style={{\r\n// //               textAlign: 'center',\r\n// //               color: message.includes('‚úÖ') ? 'green' : 'red',\r\n// //               marginTop: '10px',\r\n// //             }}\r\n// //           >\r\n// //             {message}\r\n// //           </p>\r\n// //         )}\r\n\r\n// //         <div className=\"footer\">\r\n// //           <p>\r\n// //             By using policybazaar, you agree to our{' '}\r\n// //             <a href=\"#terms\">Terms of Service</a> and{' '}\r\n// //             <a href=\"#privacy\">Privacy Policy</a>.\r\n// //           </p>\r\n// //         </div>\r\n\r\n// //         <div className=\"tags\">\r\n// //           <span className=\"tag\">Secure login</span>\r\n// //           <span className=\"tag\">Data privacy</span>\r\n// //           <span className=\"tag\">Personalized scheduling</span>\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default Login;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { ethers } from 'ethers'; // ‚úÖ All you need\r\n// import AuthABI from '../contracts/AuthContract.json';\r\n// import './Login.css';\r\n// import { generateHash } from '../utils/hash'; // ‚úÖ Your hash function\r\n\r\n// const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Ensure this matches your deployed contract\r\n\r\n// function Login() {\r\n//   const [activeTab, setActiveTab] = useState('login');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const hash = await generateHash(email, password);\r\n//     setLoading(true);\r\n//     setMessage('');\r\n\r\n//     try {\r\n//       if (!window.ethereum) {\r\n//         throw new Error('MetaMask is not installed!');\r\n//       }\r\n\r\n//       await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\r\n//       const provider = new ethers.BrowserProvider(window.ethereum); // ‚úÖ MetaMask provider\r\n//       const signer = await provider.getSigner(); // ‚úÖ Get signer from MetaMask\r\n\r\n//       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\r\n\r\n//       if (activeTab === 'register') {\r\n//         const tx = await contract.register(email, hash);\r\n//         await tx.wait();\r\n//         setMessage('‚úÖ Successfully registered on the blockchain!');\r\n//       } else if (activeTab === 'login') {\r\n//         const loginSuccess = await contract.login(email, hash);\r\n//         if (loginSuccess) {\r\n//           setMessage('‚úÖ Login successful!');\r\n//         } else {\r\n//           setMessage('‚ùå Invalid email or password!');\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-wrapper\">\r\n//       <div className=\"login-container\">\r\n//         <div className=\"logo-circle\">PB</div>\r\n//         <h1 className=\"brand-name\">policybazaar</h1>\r\n\r\n//         <div className=\"welcome-text\">\r\n//           <h2>Welcome to policybazaar</h2>\r\n//           <p>Login or create an account to manage your scheduling journey</p>\r\n//         </div>\r\n\r\n//         <div className=\"tabs\">\r\n//           <button\r\n//             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\r\n//             onClick={() => setActiveTab('login')}\r\n//           >\r\n//             Login\r\n//           </button>\r\n//           <button\r\n//             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\r\n//             onClick={() => setActiveTab('register')}\r\n//           >\r\n//             Register\r\n//           </button>\r\n//         </div>\r\n\r\n//         <form onSubmit={handleSubmit} className=\"form\">\r\n//           <div className=\"input-group\">\r\n//             <span className=\"input-icon\">üìß</span>\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"Email\"\r\n//               value={email}\r\n//               required\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <span className=\"input-icon\">üîí</span>\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Password\"\r\n//               value={password}\r\n//               required\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-options\">\r\n//             <label className=\"remember-me\">\r\n//               <input type=\"checkbox\" /> I agree to the terms and conditions\r\n//             </label>\r\n//           </div>\r\n\r\n//           <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n//             <span className=\"button-icon\">üîì</span>\r\n//             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\r\n//           </button>\r\n//         </form>\r\n\r\n//         {message && (\r\n//           <p\r\n//             style={{\r\n//               textAlign: 'center',\r\n//               color: message.includes('‚úÖ') ? 'green' : 'red',\r\n//               marginTop: '10px',\r\n//             }}\r\n//           >\r\n//             {message}\r\n//           </p>\r\n//         )}\r\n\r\n//         <div className=\"footer\">\r\n//           <p>\r\n//             By using policybazaar, you agree to our{' '}\r\n//             <a href=\"#terms\">Terms of Service</a> and{' '}\r\n//             <a href=\"#privacy\">Privacy Policy</a>.\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"tags\">\r\n//           <span className=\"tag\">Secure login</span>\r\n//           <span className=\"tag\">Data privacy</span>\r\n//           <span className=\"tag\">Personalized scheduling</span>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { ethers } from 'ethers';\r\n// import AuthABI from '../contracts/AuthContract.json';\r\n// import './Login.css';\r\n// import { generateHash } from '../utils/hash';\r\n\r\n// const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // üîÅ Your deployed address\r\n\r\n// function Login() {\r\n//   const [activeTab, setActiveTab] = useState('login');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const hash = await generateHash(email, password);\r\n//     setLoading(true);\r\n//     setMessage('');\r\n\r\n//     try {\r\n//       if (!window.ethereum) {\r\n//         throw new Error('MetaMask is not installed!');\r\n//       }\r\n\r\n//       await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\r\n//       const provider = new ethers.BrowserProvider(window.ethereum); // ‚úÖ Ethers v6\r\n//       const signer = await provider.getSigner(); // ‚úÖ Note the await\r\n//       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\r\n\r\n//       if (activeTab === 'register') {\r\n//         const tx = await contract.register(email, hash);\r\n//         await tx.wait();\r\n//         setMessage('‚úÖ Successfully registered on the blockchain!');\r\n//       } else if (activeTab === 'login') {\r\n//         const loginSuccess = await contract.login(email, hash);\r\n//         if (loginSuccess) {\r\n//           setMessage('‚úÖ Login successful!');\r\n//         } else {\r\n//           setMessage('‚ùå Invalid email or password!');\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error:', error.reason || error.message || error);\r\n//       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-wrapper\">\r\n//       <div className=\"login-container\">\r\n//         <div className=\"logo-circle\">PB</div>\r\n//         <h1 className=\"brand-name\">policybazaar</h1>\r\n\r\n//         <div className=\"welcome-text\">\r\n//           <h2>Welcome to policybazaar</h2>\r\n//           <p>Login or create an account to manage your scheduling journey</p>\r\n//         </div>\r\n\r\n//         <div className=\"tabs\">\r\n//           <button\r\n//             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\r\n//             onClick={() => setActiveTab('login')}\r\n//           >\r\n//             Login\r\n//           </button>\r\n//           <button\r\n//             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\r\n//             onClick={() => setActiveTab('register')}\r\n//           >\r\n//             Register\r\n//           </button>\r\n//         </div>\r\n\r\n//         <form onSubmit={handleSubmit} className=\"form\">\r\n//           <div className=\"input-group\">\r\n//             <span className=\"input-icon\">üìß</span>\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"Email\"\r\n//               value={email}\r\n//               required\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <span className=\"input-icon\">üîí</span>\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Password\"\r\n//               value={password}\r\n//               required\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-options\">\r\n//             <label className=\"remember-me\">\r\n//               <input type=\"checkbox\" /> I agree to the terms and conditions\r\n//             </label>\r\n//           </div>\r\n\r\n//           <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n//             <span className=\"button-icon\">üîì</span>\r\n//             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\r\n//           </button>\r\n//         </form>\r\n\r\n//         {message && (\r\n//           <p\r\n//             style={{\r\n//               textAlign: 'center',\r\n//               color: message.includes('‚úÖ') ? 'green' : 'red',\r\n//               marginTop: '10px',\r\n//             }}\r\n//           >\r\n//             {message}\r\n//           </p>\r\n//         )}\r\n\r\n//         <div className=\"footer\">\r\n//           <p>\r\n//             By using policybazaar, you agree to our{' '}\r\n//             <a href=\"#terms\">Terms of Service</a> and{' '}\r\n//             <a href=\"#privacy\">Privacy Policy</a>.\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"tags\">\r\n//           <span className=\"tag\">Secure login</span>\r\n//           <span className=\"tag\">Data privacy</span>\r\n//           <span className=\"tag\">Personalized scheduling</span>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport AuthABI from '../contracts/AuthContract.json';\r\nimport './Login.css';\r\nimport { generateHash } from '../utils/hash'; // ‚úÖ Hash function\r\n\r\nconst CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Your deployed contract\r\n\r\nfunction Login() {\r\n  const [activeTab, setActiveTab] = useState('login');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const hash = await generateHash(email, password);\r\n    setLoading(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      if (!window.ethereum) {\r\n        throw new Error('MetaMask is not installed!');\r\n      }\r\n\r\n      // ‚úÖ Use MetaMask-connected Web3 provider\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      await provider.send(\"eth_requestAccounts\", []);\r\n      const signer = provider.getSigner();\r\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\r\n\r\n      if (activeTab === 'register') {\r\n        const tx = await contract.register(email, hash);\r\n        await tx.wait();  // Wait for the transaction to be mined\r\n        setMessage('‚úÖ Successfully registered on the blockchain!');\r\n      } else if (activeTab === 'login') {\r\n        const loginSuccess = await contract.login(email, hash);  // Should return boolean\r\n        if (loginSuccess) {\r\n          setMessage('‚úÖ Login successful!');\r\n        } else {\r\n          setMessage('‚ùå Invalid email or password!');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-wrapper\">\r\n      <div className=\"login-container\">\r\n        <div className=\"logo-circle\">PB</div>\r\n        <h1 className=\"brand-name\">policybazaar</h1>\r\n\r\n        <div className=\"welcome-text\">\r\n          <h2>Welcome to policybazaar</h2>\r\n          <p>Login or create an account to manage your scheduling journey</p>\r\n        </div>\r\n\r\n        <div className=\"tabs\">\r\n          <button\r\n            className={`tab ${activeTab === 'login' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('login')}\r\n          >\r\n            Login\r\n          </button>\r\n          <button\r\n            className={`tab ${activeTab === 'register' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('register')}\r\n          >\r\n            Register\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"form\">\r\n          <div className=\"input-group\">\r\n            <span className=\"input-icon\">üìß</span>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              required\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <span className=\"input-icon\">üîí</span>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              required\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-options\">\r\n            <label className=\"remember-me\">\r\n              <input type=\"checkbox\" /> I agree to the terms and conditions\r\n            </label>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n            <span className=\"button-icon\">üîì</span>\r\n            {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\r\n          </button>\r\n        </form>\r\n\r\n        {message && (\r\n          <p\r\n            style={{\r\n              textAlign: 'center',\r\n              color: message.includes('‚úÖ') ? 'green' : 'red',\r\n              marginTop: '10px',\r\n            }}\r\n          >\r\n            {message}\r\n          </p>\r\n        )}\r\n\r\n        <div className=\"footer\">\r\n          <p>\r\n            By using policybazaar, you agree to our{' '}\r\n            <a href=\"#terms\">Terms of Service</a> and{' '}\r\n            <a href=\"#privacy\">Privacy Policy</a>.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"tags\">\r\n          <span className=\"tag\">Secure login</span>\r\n          <span className=\"tag\">Data privacy</span>\r\n          <span className=\"tag\">Personalized scheduling</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}