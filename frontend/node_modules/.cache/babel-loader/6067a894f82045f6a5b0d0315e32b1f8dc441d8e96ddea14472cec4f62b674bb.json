{"ast":null,"code":"\n\n// // // // import React, { useState } from 'react';\n// // // // import { ethers } from 'ethers';\n// // // // import AuthABI from '../contracts/AuthContract.json';\n// // // // import './Login.css';\n// // // // import { generateHash } from '../utils/hash'; // ‚úÖ Hash function\n\n// // // // const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Your deployed contract\n\n// // // // function Login() {\n// // // //   const [activeTab, setActiveTab] = useState('login');\n// // // //   const [email, setEmail] = useState('');\n// // // //   const [password, setPassword] = useState('');\n// // // //   const [message, setMessage] = useState('');\n// // // //   const [loading, setLoading] = useState(false);\n\n// // // //   const handleSubmit = async (e) => {\n// // // //     e.preventDefault();\n// // // //     const hash = await generateHash(email, password);\n// // // //     setLoading(true);\n// // // //     setMessage('');\n\n// // // //     try {\n// // // //       if (!window.ethereum) {\n// // // //         throw new Error('MetaMask is not installed!');\n// // // //       }\n\n// // // //       // ‚úÖ Use MetaMask-connected Web3 provider\n// // // //       const provider = new ethers.providers.Web3Provider(window.ethereum);\n// // // //       await provider.send(\"eth_requestAccounts\", []);\n// // // //       const signer = provider.getSigner();\n// // // //       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\n\n// // // //       if (activeTab === 'register') {\n// // // //         const tx = await contract.register(email, hash);\n// // // //         await tx.wait();  // Wait for the transaction to be mined\n// // // //         setMessage('‚úÖ Successfully registered on the blockchain!');\n// // // //       } else if (activeTab === 'login') {\n// // // //         const loginSuccess = await contract.login(email, hash);  // Should return boolean\n// // // //         if (loginSuccess) {\n// // // //           setMessage('‚úÖ Login successful!');\n// // // //         } else {\n// // // //           setMessage('‚ùå Invalid email or password!');\n// // // //         }\n// // // //       }\n// // // //     } catch (error) {\n// // // //       console.error(error);\n// // // //       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"login-wrapper\">\n// // // //       <div className=\"login-container\">\n// // // //         <div className=\"logo-circle\">PB</div>\n// // // //         <h1 className=\"brand-name\">policybazaar</h1>\n\n// // // //         <div className=\"welcome-text\">\n// // // //           <h2>Welcome to policybazaar</h2>\n// // // //           <p>Login or create an account to manage your scheduling journey</p>\n// // // //         </div>\n\n// // // //         <div className=\"tabs\">\n// // // //           <button\n// // // //             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\n// // // //             onClick={() => setActiveTab('login')}\n// // // //           >\n// // // //             Login\n// // // //           </button>\n// // // //           <button\n// // // //             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\n// // // //             onClick={() => setActiveTab('register')}\n// // // //           >\n// // // //             Register\n// // // //           </button>\n// // // //         </div>\n\n// // // //         <form onSubmit={handleSubmit} className=\"form\">\n// // // //           <div className=\"input-group\">\n// // // //             <span className=\"input-icon\">üìß</span>\n// // // //             <input\n// // // //               type=\"email\"\n// // // //               placeholder=\"Email\"\n// // // //               value={email}\n// // // //               required\n// // // //               onChange={(e) => setEmail(e.target.value)}\n// // // //             />\n// // // //           </div>\n// // // //           <div className=\"input-group\">\n// // // //             <span className=\"input-icon\">üîí</span>\n// // // //             <input\n// // // //               type=\"password\"\n// // // //               placeholder=\"Password\"\n// // // //               value={password}\n// // // //               required\n// // // //               onChange={(e) => setPassword(e.target.value)}\n// // // //             />\n// // // //           </div>\n\n// // // //           <div className=\"form-options\">\n// // // //             <label className=\"remember-me\">\n// // // //               <input type=\"checkbox\" /> I agree to the terms and conditions\n// // // //             </label>\n// // // //           </div>\n\n// // // //           <button type=\"submit\" className=\"login-button\" disabled={loading}>\n// // // //             <span className=\"button-icon\">üîì</span>\n// // // //             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\n// // // //           </button>\n// // // //         </form>\n\n// // // //         {message && (\n// // // //           <p\n// // // //             style={{\n// // // //               textAlign: 'center',\n// // // //               color: message.includes('‚úÖ') ? 'green' : 'red',\n// // // //               marginTop: '10px',\n// // // //             }}\n// // // //           >\n// // // //             {message}\n// // // //           </p>\n// // // //         )}\n\n// // // //         <div className=\"footer\">\n// // // //           <p>\n// // // //             By using policybazaar, you agree to our{' '}\n// // // //             <a href=\"#terms\">Terms of Service</a> and{' '}\n// // // //             <a href=\"#privacy\">Privacy Policy</a>.\n// // // //           </p>\n// // // //         </div>\n\n// // // //         <div className=\"tags\">\n// // // //           <span className=\"tag\">Secure login</span>\n// // // //           <span className=\"tag\">Data privacy</span>\n// // // //           <span className=\"tag\">Personalized scheduling</span>\n// // // //         </div>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // }\n\n// // // // export default Login;\n\n// // // import React, { useState } from 'react';\n// // // import { ethers } from 'ethers';  // ‚úÖ Updated import for ethers\n// // // import AuthABI from '../contracts/AuthContract.json';\n// // // import './Login.css';\n// // // import { generateHash } from '../utils/hash'; // ‚úÖ Hash function\n\n// // // const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Your deployed contract\n\n// // // function Login() {\n// // //   const [activeTab, setActiveTab] = useState('login');\n// // //   const [email, setEmail] = useState('');\n// // //   const [password, setPassword] = useState('');\n// // //   const [message, setMessage] = useState('');\n// // //   const [loading, setLoading] = useState(false);\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     const hash = await generateHash(email, password);\n// // //     setLoading(true);\n// // //     setMessage('');\n\n// // //     try {\n// // //       if (!window.ethereum) {\n// // //         throw new Error('MetaMask is not installed!');\n// // //       }\n\n// // //       // ‚úÖ Use MetaMask-connected Web3 provider (Updated syntax for ethers v6)\n// // //       const provider = new ethers.Web3Provider(window.ethereum);\n// // //       await provider.send(\"eth_requestAccounts\", []);\n// // //       const signer = provider.getSigner();\n// // //       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\n\n// // //       if (activeTab === 'register') {\n// // //         const tx = await contract.register(email, hash);\n// // //         await tx.wait();  // Wait for the transaction to be mined\n// // //         setMessage('‚úÖ Successfully registered on the blockchain!');\n// // //       } else if (activeTab === 'login') {\n// // //         const loginSuccess = await contract.login(email, hash);  // Should return boolean\n// // //         if (loginSuccess) {\n// // //           setMessage('‚úÖ Login successful!');\n// // //         } else {\n// // //           setMessage('‚ùå Invalid email or password!');\n// // //         }\n// // //       }\n// // //     } catch (error) {\n// // //       console.error(error);\n// // //       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <div className=\"login-wrapper\">\n// // //       <div className=\"login-container\">\n// // //         <div className=\"logo-circle\">PB</div>\n// // //         <h1 className=\"brand-name\">policybazaar</h1>\n\n// // //         <div className=\"welcome-text\">\n// // //           <h2>Welcome to policybazaar</h2>\n// // //           <p>Login or create an account to manage your scheduling journey</p>\n// // //         </div>\n\n// // //         <div className=\"tabs\">\n// // //           <button\n// // //             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\n// // //             onClick={() => setActiveTab('login')}\n// // //           >\n// // //             Login\n// // //           </button>\n// // //           <button\n// // //             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\n// // //             onClick={() => setActiveTab('register')}\n// // //           >\n// // //             Register\n// // //           </button>\n// // //         </div>\n\n// // //         <form onSubmit={handleSubmit} className=\"form\">\n// // //           <div className=\"input-group\">\n// // //             <span className=\"input-icon\">üìß</span>\n// // //             <input\n// // //               type=\"email\"\n// // //               placeholder=\"Email\"\n// // //               value={email}\n// // //               required\n// // //               onChange={(e) => setEmail(e.target.value)}\n// // //             />\n// // //           </div>\n// // //           <div className=\"input-group\">\n// // //             <span className=\"input-icon\">üîí</span>\n// // //             <input\n// // //               type=\"password\"\n// // //               placeholder=\"Password\"\n// // //               value={password}\n// // //               required\n// // //               onChange={(e) => setPassword(e.target.value)}\n// // //             />\n// // //           </div>\n\n// // //           <div className=\"form-options\">\n// // //             <label className=\"remember-me\">\n// // //               <input type=\"checkbox\" /> I agree to the terms and conditions\n// // //             </label>\n// // //           </div>\n\n// // //           <button type=\"submit\" className=\"login-button\" disabled={loading}>\n// // //             <span className=\"button-icon\">üîì</span>\n// // //             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\n// // //           </button>\n// // //         </form>\n\n// // //         {message && (\n// // //           <p\n// // //             style={{\n// // //               textAlign: 'center',\n// // //               color: message.includes('‚úÖ') ? 'green' : 'red',\n// // //               marginTop: '10px',\n// // //             }}\n// // //           >\n// // //             {message}\n// // //           </p>\n// // //         )}\n\n// // //         <div className=\"footer\">\n// // //           <p>\n// // //             By using policybazaar, you agree to our{' '}\n// // //             <a href=\"#terms\">Terms of Service</a> and{' '}\n// // //             <a href=\"#privacy\">Privacy Policy</a>.\n// // //           </p>\n// // //         </div>\n\n// // //         <div className=\"tags\">\n// // //           <span className=\"tag\">Secure login</span>\n// // //           <span className=\"tag\">Data privacy</span>\n// // //           <span className=\"tag\">Personalized scheduling</span>\n// // //         </div>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // }\n\n// // // export default Login;\n\n// // import React, { useState } from 'react';\n// // import { ethers } from 'ethers';  // ‚úÖ Updated import for ethers\n// // import AuthABI from '../contracts/AuthContract.json';\n// // import './Login.css';\n// // import { generateHash } from '../utils/hash'; // ‚úÖ Hash function\n\n// // const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Your deployed contract\n\n// // function Login() {\n// //   const [activeTab, setActiveTab] = useState('login');\n// //   const [email, setEmail] = useState('');\n// //   const [password, setPassword] = useState('');\n// //   const [message, setMessage] = useState('');\n// //   const [loading, setLoading] = useState(false);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const hash = await generateHash(email, password);\n// //     setLoading(true);\n// //     setMessage('');\n\n// //     try {\n// //       if (!window.ethereum) {\n// //         throw new Error('MetaMask is not installed!');\n// //       }\n\n// //       // ‚úÖ Use MetaMask-connected provider (Updated for ethers v6: Web3Provider -> BrowserProvider)\n// //       const provider = new ethers.BrowserProvider(window.ethereum);\n// //       await window.ethereum.request({ method: 'eth_requestAccounts' }); // Request account access\n// //       const signer = await provider.getSigner(); // Updated syntax for v6\n// //       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\n\n// //       if (activeTab === 'register') {\n// //         const tx = await contract.register(email, hash);\n// //         await tx.wait();  // Wait for the transaction to be mined\n// //         setMessage('‚úÖ Successfully registered on the blockchain!');\n// //       } else if (activeTab === 'login') {\n// //         const loginSuccess = await contract.login(email, hash);  // Should return boolean\n// //         if (loginSuccess) {\n// //           setMessage('‚úÖ Login successful!');\n// //         } else {\n// //           setMessage('‚ùå Invalid email or password!');\n// //         }\n// //       }\n// //     } catch (error) {\n// //       console.error(error);\n// //       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"login-wrapper\">\n// //       <div className=\"login-container\">\n// //         <div className=\"logo-circle\">PB</div>\n// //         <h1 className=\"brand-name\">policybazaar</h1>\n\n// //         <div className=\"welcome-text\">\n// //           <h2>Welcome to policybazaar</h2>\n// //           <p>Login or create an account to manage your scheduling journey</p>\n// //         </div>\n\n// //         <div className=\"tabs\">\n// //           <button\n// //             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\n// //             onClick={() => setActiveTab('login')}\n// //           >\n// //             Login\n// //           </button>\n// //           <button\n// //             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\n// //             onClick={() => setActiveTab('register')}\n// //           >\n// //             Register\n// //           </button>\n// //         </div>\n\n// //         <form onSubmit={handleSubmit} className=\"form\">\n// //           <div className=\"input-group\">\n// //             <span className=\"input-icon\">üìß</span>\n// //             <input\n// //               type=\"email\"\n// //               placeholder=\"Email\"\n// //               value={email}\n// //               required\n// //               onChange={(e) => setEmail(e.target.value)}\n// //             />\n// //           </div>\n// //           <div className=\"input-group\">\n// //             <span className=\"input-icon\">üîí</span>\n// //             <input\n// //               type=\"password\"\n// //               placeholder=\"Password\"\n// //               value={password}\n// //               required\n// //               onChange={(e) => setPassword(e.target.value)}\n// //             />\n// //           </div>\n\n// //           <div className=\"form-options\">\n// //             <label className=\"remember-me\">\n// //               <input type=\"checkbox\" /> I agree to the terms and conditions\n// //             </label>\n// //           </div>\n\n// //           <button type=\"submit\" className=\"login-button\" disabled={loading}>\n// //             <span className=\"button-icon\">üîì</span>\n// //             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\n// //           </button>\n// //         </form>\n\n// //         {message && (\n// //           <p\n// //             style={{\n// //               textAlign: 'center',\n// //               color: message.includes('‚úÖ') ? 'green' : 'red',\n// //               marginTop: '10px',\n// //             }}\n// //           >\n// //             {message}\n// //           </p>\n// //         )}\n\n// //         <div className=\"footer\">\n// //           <p>\n// //             By using policybazaar, you agree to our{' '}\n// //             <a href=\"#terms\">Terms of Service</a> and{' '}\n// //             <a href=\"#privacy\">Privacy Policy</a>.\n// //           </p>\n// //         </div>\n\n// //         <div className=\"tags\">\n// //           <span className=\"tag\">Secure login</span>\n// //           <span className=\"tag\">Data privacy</span>\n// //           <span className=\"tag\">Personalized scheduling</span>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default Login;\n\n// import React, { useState } from 'react';\n// import { ethers } from 'ethers';\n// import AuthABI from '../contracts/AuthContract.json'; // Ensure this file exports the ABI correctly\n// import './Login.css';\n// import { generateHash } from '../utils/hash';\n\n// const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512';\n\n// function Login() {\n//   const [activeTab, setActiveTab] = useState('login');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const hash = await generateHash(email, password);\n//     setLoading(true);\n//     setMessage('');\n\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('MetaMask is not installed!');\n//       }\n\n//       const provider = new ethers.BrowserProvider(window.ethereum);\n//       await window.ethereum.request({ method: 'eth_requestAccounts' });\n//       const signer = await provider.getSigner();\n\n//       // Check network\n//       const network = await provider.getNetwork();\n//       let contract; // Declare contract variable in the correct scope\n//       if (Number(network.chainId) !== 1) {\n//         try {\n//           await window.ethereum.request({\n//             method: 'wallet_switchEthereumChain',\n//             params: [{ chainId: '0x1' }], // Ethereum Mainnet\n//           });\n//           // Refresh provider after network switch\n//           const updatedProvider = new ethers.BrowserProvider(window.ethereum);\n//           const updatedSigner = await updatedProvider.getSigner();\n\n//           // Debug ABI\n//           console.log('AuthABI:', AuthABI);\n//           console.log('AuthABI.abi:', AuthABI.abi);\n\n//           // Check if AuthABI.abi exists\n//           if (!AuthABI || !AuthABI.abi) {\n//             throw new Error('AuthABI.abi is undefined. Check the AuthContract.json file.');\n//           }\n\n//           contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, updatedSigner);\n//         } catch (switchError) {\n//           throw new Error('Failed to switch to Ethereum Mainnet. Please switch manually in MetaMask.');\n//         }\n//       } else {\n//         // Debug ABI\n//         console.log('AuthABI:', AuthABI);\n//         console.log('AuthABI.abi:', AuthABI.abi);\n\n//         // Check if AuthABI.abi exists\n//         if (!AuthABI || !AuthABI.abi) {\n//           throw new Error('AuthABI.abi is undefined. Check the AuthContract.json file.');\n//         }\n\n//         contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\n//       }\n\n//       if (!contract) {\n//         throw new Error('Failed to initialize contract. Check ABI and contract address.');\n//       }\n\n//       console.log('Email:', email);\n//       console.log('Generated hash:', hash);\n\n//       if (activeTab === 'register') {\n//         const tx = await contract.register(email, hash, { gasLimit: 300000 });\n//         await tx.wait();\n//         setMessage('‚úÖ Successfully registered on the blockchain!');\n//       } else if (activeTab === 'login') {\n//         const loginSuccess = await contract.login(email, hash);\n//         if (loginSuccess) {\n//           setMessage('‚úÖ Login successful!');\n//         } else {\n//           setMessage('‚ùå Invalid email or password!');\n//         }\n//       }\n//     } catch (error) {\n//       console.error('Contract interaction error:', error);\n//       setMessage(`‚ùó Error: ${error.message}. Check MetaMask & console.`);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-wrapper\">\n//       <div className=\"login-container\">\n//         <div className=\"logo-circle\">PB</div>\n//         <h1 className=\"brand-name\">policybazaar</h1>\n\n//         <div className=\"welcome-text\">\n//           <h2>Welcome to policybazaar</h2>\n//           <p>Login or create an account to manage your scheduling journey</p>\n//         </div>\n\n//         <div className=\"tabs\">\n//           <button\n//             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\n//             onClick={() => setActiveTab('login')}\n//           >\n//             Login\n//           </button>\n//           <button\n//             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\n//             onClick={() => setActiveTab('register')}\n//           >\n//             Register\n//           </button>\n//         </div>\n\n//         <form onSubmit={handleSubmit} className=\"form\">\n//           <div className=\"input-group\">\n//             <span className=\"input-icon\">üìß</span>\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               value={email}\n//               required\n//               onChange={(e) => setEmail(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"input-group\">\n//             <span className=\"input-icon\">üîí</span>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               required\n//               onChange={(e) => setPassword(e.target.value)}\n//             />\n//           </div>\n\n//           <div className=\"form-options\">\n//             <label className=\"remember-me\">\n//               <input type=\"checkbox\" /> I agree to the terms and conditions\n//             </label>\n//           </div>\n\n//           <button type=\"submit\" className=\"login-button\" disabled={loading}>\n//             <span className=\"button-icon\">üîì</span>\n//             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\n//           </button>\n//         </form>\n\n//         {message && (\n//           <p\n//             style={{\n//               textAlign: 'center',\n//               color: message.includes('‚úÖ') ? 'green' : 'red',\n//               marginTop: '10px',\n//             }}\n//           >\n//             {message}\n//           </p>\n//         )}\n\n//         <div className=\"footer\">\n//           <p>\n//             By using policybazaar, you agree to our{' '}\n//             <a href=\"#terms\">Terms of Service</a> and{' '}\n//             <a href=\"#privacy\">Privacy Policy</a>.\n//           </p>\n//         </div>\n\n//         <div className=\"tags\">\n//           <span className=\"tag\">Secure login</span>\n//           <span className=\"tag\">Data privacy</span>\n//           <span className=\"tag\">Personalized scheduling</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Login;","map":{"version":3,"names":[],"sources":["C:/Users/Prathika/OneDrive/Desktop/health/healthcare-platform/frontend/src/pages/Login.js"],"sourcesContent":["\r\n\r\n\r\n\r\n// // // // import React, { useState } from 'react';\r\n// // // // import { ethers } from 'ethers';\r\n// // // // import AuthABI from '../contracts/AuthContract.json';\r\n// // // // import './Login.css';\r\n// // // // import { generateHash } from '../utils/hash'; // ‚úÖ Hash function\r\n\r\n// // // // const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Your deployed contract\r\n\r\n// // // // function Login() {\r\n// // // //   const [activeTab, setActiveTab] = useState('login');\r\n// // // //   const [email, setEmail] = useState('');\r\n// // // //   const [password, setPassword] = useState('');\r\n// // // //   const [message, setMessage] = useState('');\r\n// // // //   const [loading, setLoading] = useState(false);\r\n\r\n// // // //   const handleSubmit = async (e) => {\r\n// // // //     e.preventDefault();\r\n// // // //     const hash = await generateHash(email, password);\r\n// // // //     setLoading(true);\r\n// // // //     setMessage('');\r\n\r\n// // // //     try {\r\n// // // //       if (!window.ethereum) {\r\n// // // //         throw new Error('MetaMask is not installed!');\r\n// // // //       }\r\n\r\n// // // //       // ‚úÖ Use MetaMask-connected Web3 provider\r\n// // // //       const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n// // // //       await provider.send(\"eth_requestAccounts\", []);\r\n// // // //       const signer = provider.getSigner();\r\n// // // //       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\r\n\r\n// // // //       if (activeTab === 'register') {\r\n// // // //         const tx = await contract.register(email, hash);\r\n// // // //         await tx.wait();  // Wait for the transaction to be mined\r\n// // // //         setMessage('‚úÖ Successfully registered on the blockchain!');\r\n// // // //       } else if (activeTab === 'login') {\r\n// // // //         const loginSuccess = await contract.login(email, hash);  // Should return boolean\r\n// // // //         if (loginSuccess) {\r\n// // // //           setMessage('‚úÖ Login successful!');\r\n// // // //         } else {\r\n// // // //           setMessage('‚ùå Invalid email or password!');\r\n// // // //         }\r\n// // // //       }\r\n// // // //     } catch (error) {\r\n// // // //       console.error(error);\r\n// // // //       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\r\n// // // //     } finally {\r\n// // // //       setLoading(false);\r\n// // // //     }\r\n// // // //   };\r\n\r\n// // // //   return (\r\n// // // //     <div className=\"login-wrapper\">\r\n// // // //       <div className=\"login-container\">\r\n// // // //         <div className=\"logo-circle\">PB</div>\r\n// // // //         <h1 className=\"brand-name\">policybazaar</h1>\r\n\r\n// // // //         <div className=\"welcome-text\">\r\n// // // //           <h2>Welcome to policybazaar</h2>\r\n// // // //           <p>Login or create an account to manage your scheduling journey</p>\r\n// // // //         </div>\r\n\r\n// // // //         <div className=\"tabs\">\r\n// // // //           <button\r\n// // // //             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\r\n// // // //             onClick={() => setActiveTab('login')}\r\n// // // //           >\r\n// // // //             Login\r\n// // // //           </button>\r\n// // // //           <button\r\n// // // //             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\r\n// // // //             onClick={() => setActiveTab('register')}\r\n// // // //           >\r\n// // // //             Register\r\n// // // //           </button>\r\n// // // //         </div>\r\n\r\n// // // //         <form onSubmit={handleSubmit} className=\"form\">\r\n// // // //           <div className=\"input-group\">\r\n// // // //             <span className=\"input-icon\">üìß</span>\r\n// // // //             <input\r\n// // // //               type=\"email\"\r\n// // // //               placeholder=\"Email\"\r\n// // // //               value={email}\r\n// // // //               required\r\n// // // //               onChange={(e) => setEmail(e.target.value)}\r\n// // // //             />\r\n// // // //           </div>\r\n// // // //           <div className=\"input-group\">\r\n// // // //             <span className=\"input-icon\">üîí</span>\r\n// // // //             <input\r\n// // // //               type=\"password\"\r\n// // // //               placeholder=\"Password\"\r\n// // // //               value={password}\r\n// // // //               required\r\n// // // //               onChange={(e) => setPassword(e.target.value)}\r\n// // // //             />\r\n// // // //           </div>\r\n\r\n// // // //           <div className=\"form-options\">\r\n// // // //             <label className=\"remember-me\">\r\n// // // //               <input type=\"checkbox\" /> I agree to the terms and conditions\r\n// // // //             </label>\r\n// // // //           </div>\r\n\r\n// // // //           <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n// // // //             <span className=\"button-icon\">üîì</span>\r\n// // // //             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\r\n// // // //           </button>\r\n// // // //         </form>\r\n\r\n// // // //         {message && (\r\n// // // //           <p\r\n// // // //             style={{\r\n// // // //               textAlign: 'center',\r\n// // // //               color: message.includes('‚úÖ') ? 'green' : 'red',\r\n// // // //               marginTop: '10px',\r\n// // // //             }}\r\n// // // //           >\r\n// // // //             {message}\r\n// // // //           </p>\r\n// // // //         )}\r\n\r\n// // // //         <div className=\"footer\">\r\n// // // //           <p>\r\n// // // //             By using policybazaar, you agree to our{' '}\r\n// // // //             <a href=\"#terms\">Terms of Service</a> and{' '}\r\n// // // //             <a href=\"#privacy\">Privacy Policy</a>.\r\n// // // //           </p>\r\n// // // //         </div>\r\n\r\n// // // //         <div className=\"tags\">\r\n// // // //           <span className=\"tag\">Secure login</span>\r\n// // // //           <span className=\"tag\">Data privacy</span>\r\n// // // //           <span className=\"tag\">Personalized scheduling</span>\r\n// // // //         </div>\r\n// // // //       </div>\r\n// // // //     </div>\r\n// // // //   );\r\n// // // // }\r\n\r\n// // // // export default Login;\r\n\r\n\r\n// // // import React, { useState } from 'react';\r\n// // // import { ethers } from 'ethers';  // ‚úÖ Updated import for ethers\r\n// // // import AuthABI from '../contracts/AuthContract.json';\r\n// // // import './Login.css';\r\n// // // import { generateHash } from '../utils/hash'; // ‚úÖ Hash function\r\n\r\n// // // const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Your deployed contract\r\n\r\n// // // function Login() {\r\n// // //   const [activeTab, setActiveTab] = useState('login');\r\n// // //   const [email, setEmail] = useState('');\r\n// // //   const [password, setPassword] = useState('');\r\n// // //   const [message, setMessage] = useState('');\r\n// // //   const [loading, setLoading] = useState(false);\r\n\r\n// // //   const handleSubmit = async (e) => {\r\n// // //     e.preventDefault();\r\n// // //     const hash = await generateHash(email, password);\r\n// // //     setLoading(true);\r\n// // //     setMessage('');\r\n\r\n// // //     try {\r\n// // //       if (!window.ethereum) {\r\n// // //         throw new Error('MetaMask is not installed!');\r\n// // //       }\r\n\r\n// // //       // ‚úÖ Use MetaMask-connected Web3 provider (Updated syntax for ethers v6)\r\n// // //       const provider = new ethers.Web3Provider(window.ethereum);\r\n// // //       await provider.send(\"eth_requestAccounts\", []);\r\n// // //       const signer = provider.getSigner();\r\n// // //       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\r\n\r\n// // //       if (activeTab === 'register') {\r\n// // //         const tx = await contract.register(email, hash);\r\n// // //         await tx.wait();  // Wait for the transaction to be mined\r\n// // //         setMessage('‚úÖ Successfully registered on the blockchain!');\r\n// // //       } else if (activeTab === 'login') {\r\n// // //         const loginSuccess = await contract.login(email, hash);  // Should return boolean\r\n// // //         if (loginSuccess) {\r\n// // //           setMessage('‚úÖ Login successful!');\r\n// // //         } else {\r\n// // //           setMessage('‚ùå Invalid email or password!');\r\n// // //         }\r\n// // //       }\r\n// // //     } catch (error) {\r\n// // //       console.error(error);\r\n// // //       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\r\n// // //     } finally {\r\n// // //       setLoading(false);\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <div className=\"login-wrapper\">\r\n// // //       <div className=\"login-container\">\r\n// // //         <div className=\"logo-circle\">PB</div>\r\n// // //         <h1 className=\"brand-name\">policybazaar</h1>\r\n\r\n// // //         <div className=\"welcome-text\">\r\n// // //           <h2>Welcome to policybazaar</h2>\r\n// // //           <p>Login or create an account to manage your scheduling journey</p>\r\n// // //         </div>\r\n\r\n// // //         <div className=\"tabs\">\r\n// // //           <button\r\n// // //             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\r\n// // //             onClick={() => setActiveTab('login')}\r\n// // //           >\r\n// // //             Login\r\n// // //           </button>\r\n// // //           <button\r\n// // //             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\r\n// // //             onClick={() => setActiveTab('register')}\r\n// // //           >\r\n// // //             Register\r\n// // //           </button>\r\n// // //         </div>\r\n\r\n// // //         <form onSubmit={handleSubmit} className=\"form\">\r\n// // //           <div className=\"input-group\">\r\n// // //             <span className=\"input-icon\">üìß</span>\r\n// // //             <input\r\n// // //               type=\"email\"\r\n// // //               placeholder=\"Email\"\r\n// // //               value={email}\r\n// // //               required\r\n// // //               onChange={(e) => setEmail(e.target.value)}\r\n// // //             />\r\n// // //           </div>\r\n// // //           <div className=\"input-group\">\r\n// // //             <span className=\"input-icon\">üîí</span>\r\n// // //             <input\r\n// // //               type=\"password\"\r\n// // //               placeholder=\"Password\"\r\n// // //               value={password}\r\n// // //               required\r\n// // //               onChange={(e) => setPassword(e.target.value)}\r\n// // //             />\r\n// // //           </div>\r\n\r\n// // //           <div className=\"form-options\">\r\n// // //             <label className=\"remember-me\">\r\n// // //               <input type=\"checkbox\" /> I agree to the terms and conditions\r\n// // //             </label>\r\n// // //           </div>\r\n\r\n// // //           <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n// // //             <span className=\"button-icon\">üîì</span>\r\n// // //             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\r\n// // //           </button>\r\n// // //         </form>\r\n\r\n// // //         {message && (\r\n// // //           <p\r\n// // //             style={{\r\n// // //               textAlign: 'center',\r\n// // //               color: message.includes('‚úÖ') ? 'green' : 'red',\r\n// // //               marginTop: '10px',\r\n// // //             }}\r\n// // //           >\r\n// // //             {message}\r\n// // //           </p>\r\n// // //         )}\r\n\r\n// // //         <div className=\"footer\">\r\n// // //           <p>\r\n// // //             By using policybazaar, you agree to our{' '}\r\n// // //             <a href=\"#terms\">Terms of Service</a> and{' '}\r\n// // //             <a href=\"#privacy\">Privacy Policy</a>.\r\n// // //           </p>\r\n// // //         </div>\r\n\r\n// // //         <div className=\"tags\">\r\n// // //           <span className=\"tag\">Secure login</span>\r\n// // //           <span className=\"tag\">Data privacy</span>\r\n// // //           <span className=\"tag\">Personalized scheduling</span>\r\n// // //         </div>\r\n// // //       </div>\r\n// // //     </div>\r\n// // //   );\r\n// // // }\r\n\r\n// // // export default Login;\r\n\r\n\r\n\r\n\r\n// // import React, { useState } from 'react';\r\n// // import { ethers } from 'ethers';  // ‚úÖ Updated import for ethers\r\n// // import AuthABI from '../contracts/AuthContract.json';\r\n// // import './Login.css';\r\n// // import { generateHash } from '../utils/hash'; // ‚úÖ Hash function\r\n\r\n// // const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Your deployed contract\r\n\r\n// // function Login() {\r\n// //   const [activeTab, setActiveTab] = useState('login');\r\n// //   const [email, setEmail] = useState('');\r\n// //   const [password, setPassword] = useState('');\r\n// //   const [message, setMessage] = useState('');\r\n// //   const [loading, setLoading] = useState(false);\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     const hash = await generateHash(email, password);\r\n// //     setLoading(true);\r\n// //     setMessage('');\r\n\r\n// //     try {\r\n// //       if (!window.ethereum) {\r\n// //         throw new Error('MetaMask is not installed!');\r\n// //       }\r\n\r\n// //       // ‚úÖ Use MetaMask-connected provider (Updated for ethers v6: Web3Provider -> BrowserProvider)\r\n// //       const provider = new ethers.BrowserProvider(window.ethereum);\r\n// //       await window.ethereum.request({ method: 'eth_requestAccounts' }); // Request account access\r\n// //       const signer = await provider.getSigner(); // Updated syntax for v6\r\n// //       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\r\n\r\n// //       if (activeTab === 'register') {\r\n// //         const tx = await contract.register(email, hash);\r\n// //         await tx.wait();  // Wait for the transaction to be mined\r\n// //         setMessage('‚úÖ Successfully registered on the blockchain!');\r\n// //       } else if (activeTab === 'login') {\r\n// //         const loginSuccess = await contract.login(email, hash);  // Should return boolean\r\n// //         if (loginSuccess) {\r\n// //           setMessage('‚úÖ Login successful!');\r\n// //         } else {\r\n// //           setMessage('‚ùå Invalid email or password!');\r\n// //         }\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error(error);\r\n// //       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"login-wrapper\">\r\n// //       <div className=\"login-container\">\r\n// //         <div className=\"logo-circle\">PB</div>\r\n// //         <h1 className=\"brand-name\">policybazaar</h1>\r\n\r\n// //         <div className=\"welcome-text\">\r\n// //           <h2>Welcome to policybazaar</h2>\r\n// //           <p>Login or create an account to manage your scheduling journey</p>\r\n// //         </div>\r\n\r\n// //         <div className=\"tabs\">\r\n// //           <button\r\n// //             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\r\n// //             onClick={() => setActiveTab('login')}\r\n// //           >\r\n// //             Login\r\n// //           </button>\r\n// //           <button\r\n// //             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\r\n// //             onClick={() => setActiveTab('register')}\r\n// //           >\r\n// //             Register\r\n// //           </button>\r\n// //         </div>\r\n\r\n// //         <form onSubmit={handleSubmit} className=\"form\">\r\n// //           <div className=\"input-group\">\r\n// //             <span className=\"input-icon\">üìß</span>\r\n// //             <input\r\n// //               type=\"email\"\r\n// //               placeholder=\"Email\"\r\n// //               value={email}\r\n// //               required\r\n// //               onChange={(e) => setEmail(e.target.value)}\r\n// //             />\r\n// //           </div>\r\n// //           <div className=\"input-group\">\r\n// //             <span className=\"input-icon\">üîí</span>\r\n// //             <input\r\n// //               type=\"password\"\r\n// //               placeholder=\"Password\"\r\n// //               value={password}\r\n// //               required\r\n// //               onChange={(e) => setPassword(e.target.value)}\r\n// //             />\r\n// //           </div>\r\n\r\n// //           <div className=\"form-options\">\r\n// //             <label className=\"remember-me\">\r\n// //               <input type=\"checkbox\" /> I agree to the terms and conditions\r\n// //             </label>\r\n// //           </div>\r\n\r\n// //           <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n// //             <span className=\"button-icon\">üîì</span>\r\n// //             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\r\n// //           </button>\r\n// //         </form>\r\n\r\n// //         {message && (\r\n// //           <p\r\n// //             style={{\r\n// //               textAlign: 'center',\r\n// //               color: message.includes('‚úÖ') ? 'green' : 'red',\r\n// //               marginTop: '10px',\r\n// //             }}\r\n// //           >\r\n// //             {message}\r\n// //           </p>\r\n// //         )}\r\n\r\n// //         <div className=\"footer\">\r\n// //           <p>\r\n// //             By using policybazaar, you agree to our{' '}\r\n// //             <a href=\"#terms\">Terms of Service</a> and{' '}\r\n// //             <a href=\"#privacy\">Privacy Policy</a>.\r\n// //           </p>\r\n// //         </div>\r\n\r\n// //         <div className=\"tags\">\r\n// //           <span className=\"tag\">Secure login</span>\r\n// //           <span className=\"tag\">Data privacy</span>\r\n// //           <span className=\"tag\">Personalized scheduling</span>\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default Login;\r\n\r\n// import React, { useState } from 'react';\r\n// import { ethers } from 'ethers';\r\n// import AuthABI from '../contracts/AuthContract.json'; // Ensure this file exports the ABI correctly\r\n// import './Login.css';\r\n// import { generateHash } from '../utils/hash';\r\n\r\n// const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512';\r\n\r\n// function Login() {\r\n//   const [activeTab, setActiveTab] = useState('login');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const hash = await generateHash(email, password);\r\n//     setLoading(true);\r\n//     setMessage('');\r\n\r\n//     try {\r\n//       if (!window.ethereum) {\r\n//         throw new Error('MetaMask is not installed!');\r\n//       }\r\n\r\n//       const provider = new ethers.BrowserProvider(window.ethereum);\r\n//       await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n//       const signer = await provider.getSigner();\r\n\r\n//       // Check network\r\n//       const network = await provider.getNetwork();\r\n//       let contract; // Declare contract variable in the correct scope\r\n//       if (Number(network.chainId) !== 1) {\r\n//         try {\r\n//           await window.ethereum.request({\r\n//             method: 'wallet_switchEthereumChain',\r\n//             params: [{ chainId: '0x1' }], // Ethereum Mainnet\r\n//           });\r\n//           // Refresh provider after network switch\r\n//           const updatedProvider = new ethers.BrowserProvider(window.ethereum);\r\n//           const updatedSigner = await updatedProvider.getSigner();\r\n\r\n//           // Debug ABI\r\n//           console.log('AuthABI:', AuthABI);\r\n//           console.log('AuthABI.abi:', AuthABI.abi);\r\n\r\n//           // Check if AuthABI.abi exists\r\n//           if (!AuthABI || !AuthABI.abi) {\r\n//             throw new Error('AuthABI.abi is undefined. Check the AuthContract.json file.');\r\n//           }\r\n\r\n//           contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, updatedSigner);\r\n//         } catch (switchError) {\r\n//           throw new Error('Failed to switch to Ethereum Mainnet. Please switch manually in MetaMask.');\r\n//         }\r\n//       } else {\r\n//         // Debug ABI\r\n//         console.log('AuthABI:', AuthABI);\r\n//         console.log('AuthABI.abi:', AuthABI.abi);\r\n\r\n//         // Check if AuthABI.abi exists\r\n//         if (!AuthABI || !AuthABI.abi) {\r\n//           throw new Error('AuthABI.abi is undefined. Check the AuthContract.json file.');\r\n//         }\r\n\r\n//         contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\r\n//       }\r\n\r\n//       if (!contract) {\r\n//         throw new Error('Failed to initialize contract. Check ABI and contract address.');\r\n//       }\r\n\r\n//       console.log('Email:', email);\r\n//       console.log('Generated hash:', hash);\r\n\r\n//       if (activeTab === 'register') {\r\n//         const tx = await contract.register(email, hash, { gasLimit: 300000 });\r\n//         await tx.wait();\r\n//         setMessage('‚úÖ Successfully registered on the blockchain!');\r\n//       } else if (activeTab === 'login') {\r\n//         const loginSuccess = await contract.login(email, hash);\r\n//         if (loginSuccess) {\r\n//           setMessage('‚úÖ Login successful!');\r\n//         } else {\r\n//           setMessage('‚ùå Invalid email or password!');\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Contract interaction error:', error);\r\n//       setMessage(`‚ùó Error: ${error.message}. Check MetaMask & console.`);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-wrapper\">\r\n//       <div className=\"login-container\">\r\n//         <div className=\"logo-circle\">PB</div>\r\n//         <h1 className=\"brand-name\">policybazaar</h1>\r\n\r\n//         <div className=\"welcome-text\">\r\n//           <h2>Welcome to policybazaar</h2>\r\n//           <p>Login or create an account to manage your scheduling journey</p>\r\n//         </div>\r\n\r\n//         <div className=\"tabs\">\r\n//           <button\r\n//             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\r\n//             onClick={() => setActiveTab('login')}\r\n//           >\r\n//             Login\r\n//           </button>\r\n//           <button\r\n//             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\r\n//             onClick={() => setActiveTab('register')}\r\n//           >\r\n//             Register\r\n//           </button>\r\n//         </div>\r\n\r\n//         <form onSubmit={handleSubmit} className=\"form\">\r\n//           <div className=\"input-group\">\r\n//             <span className=\"input-icon\">üìß</span>\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"Email\"\r\n//               value={email}\r\n//               required\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <span className=\"input-icon\">üîí</span>\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Password\"\r\n//               value={password}\r\n//               required\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-options\">\r\n//             <label className=\"remember-me\">\r\n//               <input type=\"checkbox\" /> I agree to the terms and conditions\r\n//             </label>\r\n//           </div>\r\n\r\n//           <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n//             <span className=\"button-icon\">üîì</span>\r\n//             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\r\n//           </button>\r\n//         </form>\r\n\r\n//         {message && (\r\n//           <p\r\n//             style={{\r\n//               textAlign: 'center',\r\n//               color: message.includes('‚úÖ') ? 'green' : 'red',\r\n//               marginTop: '10px',\r\n//             }}\r\n//           >\r\n//             {message}\r\n//           </p>\r\n//         )}\r\n\r\n//         <div className=\"footer\">\r\n//           <p>\r\n//             By using policybazaar, you agree to our{' '}\r\n//             <a href=\"#terms\">Terms of Service</a> and{' '}\r\n//             <a href=\"#privacy\">Privacy Policy</a>.\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"tags\">\r\n//           <span className=\"tag\">Secure login</span>\r\n//           <span className=\"tag\">Data privacy</span>\r\n//           <span className=\"tag\">Personalized scheduling</span>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;"],"mappings":";;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}