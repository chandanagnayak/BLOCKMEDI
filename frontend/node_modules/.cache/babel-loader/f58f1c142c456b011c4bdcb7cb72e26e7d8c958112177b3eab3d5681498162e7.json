{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prathika\\\\OneDrive\\\\Desktop\\\\health\\\\healthcare-platform\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// // // import React, { useState } from 'react';\n// // // import { ethers } from 'ethers';\n// // // import AuthABI from '../contracts/AuthContract.json';\n// // // import './Login.css';\n// // // import { generateHash } from '../utils/hash'; // ‚úÖ Hash function\n\n// // // const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Your deployed contract\n\n// // // function Login() {\n// // //   const [activeTab, setActiveTab] = useState('login');\n// // //   const [email, setEmail] = useState('');\n// // //   const [password, setPassword] = useState('');\n// // //   const [message, setMessage] = useState('');\n// // //   const [loading, setLoading] = useState(false);\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     const hash = await generateHash(email, password);\n// // //     setLoading(true);\n// // //     setMessage('');\n\n// // //     try {\n// // //       if (!window.ethereum) {\n// // //         throw new Error('MetaMask is not installed!');\n// // //       }\n\n// // //       // ‚úÖ Use MetaMask-connected Web3 provider\n// // //       const provider = new ethers.providers.Web3Provider(window.ethereum);\n// // //       await provider.send(\"eth_requestAccounts\", []);\n// // //       const signer = provider.getSigner();\n// // //       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\n\n// // //       if (activeTab === 'register') {\n// // //         const tx = await contract.register(email, hash);\n// // //         await tx.wait();  // Wait for the transaction to be mined\n// // //         setMessage('‚úÖ Successfully registered on the blockchain!');\n// // //       } else if (activeTab === 'login') {\n// // //         const loginSuccess = await contract.login(email, hash);  // Should return boolean\n// // //         if (loginSuccess) {\n// // //           setMessage('‚úÖ Login successful!');\n// // //         } else {\n// // //           setMessage('‚ùå Invalid email or password!');\n// // //         }\n// // //       }\n// // //     } catch (error) {\n// // //       console.error(error);\n// // //       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <div className=\"login-wrapper\">\n// // //       <div className=\"login-container\">\n// // //         <div className=\"logo-circle\">PB</div>\n// // //         <h1 className=\"brand-name\">policybazaar</h1>\n\n// // //         <div className=\"welcome-text\">\n// // //           <h2>Welcome to policybazaar</h2>\n// // //           <p>Login or create an account to manage your scheduling journey</p>\n// // //         </div>\n\n// // //         <div className=\"tabs\">\n// // //           <button\n// // //             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\n// // //             onClick={() => setActiveTab('login')}\n// // //           >\n// // //             Login\n// // //           </button>\n// // //           <button\n// // //             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\n// // //             onClick={() => setActiveTab('register')}\n// // //           >\n// // //             Register\n// // //           </button>\n// // //         </div>\n\n// // //         <form onSubmit={handleSubmit} className=\"form\">\n// // //           <div className=\"input-group\">\n// // //             <span className=\"input-icon\">üìß</span>\n// // //             <input\n// // //               type=\"email\"\n// // //               placeholder=\"Email\"\n// // //               value={email}\n// // //               required\n// // //               onChange={(e) => setEmail(e.target.value)}\n// // //             />\n// // //           </div>\n// // //           <div className=\"input-group\">\n// // //             <span className=\"input-icon\">üîí</span>\n// // //             <input\n// // //               type=\"password\"\n// // //               placeholder=\"Password\"\n// // //               value={password}\n// // //               required\n// // //               onChange={(e) => setPassword(e.target.value)}\n// // //             />\n// // //           </div>\n\n// // //           <div className=\"form-options\">\n// // //             <label className=\"remember-me\">\n// // //               <input type=\"checkbox\" /> I agree to the terms and conditions\n// // //             </label>\n// // //           </div>\n\n// // //           <button type=\"submit\" className=\"login-button\" disabled={loading}>\n// // //             <span className=\"button-icon\">üîì</span>\n// // //             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\n// // //           </button>\n// // //         </form>\n\n// // //         {message && (\n// // //           <p\n// // //             style={{\n// // //               textAlign: 'center',\n// // //               color: message.includes('‚úÖ') ? 'green' : 'red',\n// // //               marginTop: '10px',\n// // //             }}\n// // //           >\n// // //             {message}\n// // //           </p>\n// // //         )}\n\n// // //         <div className=\"footer\">\n// // //           <p>\n// // //             By using policybazaar, you agree to our{' '}\n// // //             <a href=\"#terms\">Terms of Service</a> and{' '}\n// // //             <a href=\"#privacy\">Privacy Policy</a>.\n// // //           </p>\n// // //         </div>\n\n// // //         <div className=\"tags\">\n// // //           <span className=\"tag\">Secure login</span>\n// // //           <span className=\"tag\">Data privacy</span>\n// // //           <span className=\"tag\">Personalized scheduling</span>\n// // //         </div>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // }\n\n// // // export default Login;\n\n// // import React, { useState } from 'react';\n// // import { ethers } from 'ethers';  // ‚úÖ Updated import for ethers\n// // import AuthABI from '../contracts/AuthContract.json';\n// // import './Login.css';\n// // import { generateHash } from '../utils/hash'; // ‚úÖ Hash function\n\n// // const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Your deployed contract\n\n// // function Login() {\n// //   const [activeTab, setActiveTab] = useState('login');\n// //   const [email, setEmail] = useState('');\n// //   const [password, setPassword] = useState('');\n// //   const [message, setMessage] = useState('');\n// //   const [loading, setLoading] = useState(false);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const hash = await generateHash(email, password);\n// //     setLoading(true);\n// //     setMessage('');\n\n// //     try {\n// //       if (!window.ethereum) {\n// //         throw new Error('MetaMask is not installed!');\n// //       }\n\n// //       // ‚úÖ Use MetaMask-connected Web3 provider (Updated syntax for ethers v6)\n// //       const provider = new ethers.Web3Provider(window.ethereum);\n// //       await provider.send(\"eth_requestAccounts\", []);\n// //       const signer = provider.getSigner();\n// //       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\n\n// //       if (activeTab === 'register') {\n// //         const tx = await contract.register(email, hash);\n// //         await tx.wait();  // Wait for the transaction to be mined\n// //         setMessage('‚úÖ Successfully registered on the blockchain!');\n// //       } else if (activeTab === 'login') {\n// //         const loginSuccess = await contract.login(email, hash);  // Should return boolean\n// //         if (loginSuccess) {\n// //           setMessage('‚úÖ Login successful!');\n// //         } else {\n// //           setMessage('‚ùå Invalid email or password!');\n// //         }\n// //       }\n// //     } catch (error) {\n// //       console.error(error);\n// //       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"login-wrapper\">\n// //       <div className=\"login-container\">\n// //         <div className=\"logo-circle\">PB</div>\n// //         <h1 className=\"brand-name\">policybazaar</h1>\n\n// //         <div className=\"welcome-text\">\n// //           <h2>Welcome to policybazaar</h2>\n// //           <p>Login or create an account to manage your scheduling journey</p>\n// //         </div>\n\n// //         <div className=\"tabs\">\n// //           <button\n// //             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\n// //             onClick={() => setActiveTab('login')}\n// //           >\n// //             Login\n// //           </button>\n// //           <button\n// //             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\n// //             onClick={() => setActiveTab('register')}\n// //           >\n// //             Register\n// //           </button>\n// //         </div>\n\n// //         <form onSubmit={handleSubmit} className=\"form\">\n// //           <div className=\"input-group\">\n// //             <span className=\"input-icon\">üìß</span>\n// //             <input\n// //               type=\"email\"\n// //               placeholder=\"Email\"\n// //               value={email}\n// //               required\n// //               onChange={(e) => setEmail(e.target.value)}\n// //             />\n// //           </div>\n// //           <div className=\"input-group\">\n// //             <span className=\"input-icon\">üîí</span>\n// //             <input\n// //               type=\"password\"\n// //               placeholder=\"Password\"\n// //               value={password}\n// //               required\n// //               onChange={(e) => setPassword(e.target.value)}\n// //             />\n// //           </div>\n\n// //           <div className=\"form-options\">\n// //             <label className=\"remember-me\">\n// //               <input type=\"checkbox\" /> I agree to the terms and conditions\n// //             </label>\n// //           </div>\n\n// //           <button type=\"submit\" className=\"login-button\" disabled={loading}>\n// //             <span className=\"button-icon\">üîì</span>\n// //             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\n// //           </button>\n// //         </form>\n\n// //         {message && (\n// //           <p\n// //             style={{\n// //               textAlign: 'center',\n// //               color: message.includes('‚úÖ') ? 'green' : 'red',\n// //               marginTop: '10px',\n// //             }}\n// //           >\n// //             {message}\n// //           </p>\n// //         )}\n\n// //         <div className=\"footer\">\n// //           <p>\n// //             By using policybazaar, you agree to our{' '}\n// //             <a href=\"#terms\">Terms of Service</a> and{' '}\n// //             <a href=\"#privacy\">Privacy Policy</a>.\n// //           </p>\n// //         </div>\n\n// //         <div className=\"tags\">\n// //           <span className=\"tag\">Secure login</span>\n// //           <span className=\"tag\">Data privacy</span>\n// //           <span className=\"tag\">Personalized scheduling</span>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default Login;\n\n// import React, { useState } from 'react';\n// import { ethers } from 'ethers';  // ‚úÖ Updated import for ethers\n// import AuthABI from '../contracts/AuthContract.json';\n// import './Login.css';\n// import { generateHash } from '../utils/hash'; // ‚úÖ Hash function\n\n// const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Your deployed contract\n\n// function Login() {\n//   const [activeTab, setActiveTab] = useState('login');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const hash = await generateHash(email, password);\n//     setLoading(true);\n//     setMessage('');\n\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('MetaMask is not installed!');\n//       }\n\n//       // ‚úÖ Use MetaMask-connected provider (Updated for ethers v6: Web3Provider -> BrowserProvider)\n//       const provider = new ethers.BrowserProvider(window.ethereum);\n//       await window.ethereum.request({ method: 'eth_requestAccounts' }); // Request account access\n//       const signer = await provider.getSigner(); // Updated syntax for v6\n//       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\n\n//       if (activeTab === 'register') {\n//         const tx = await contract.register(email, hash);\n//         await tx.wait();  // Wait for the transaction to be mined\n//         setMessage('‚úÖ Successfully registered on the blockchain!');\n//       } else if (activeTab === 'login') {\n//         const loginSuccess = await contract.login(email, hash);  // Should return boolean\n//         if (loginSuccess) {\n//           setMessage('‚úÖ Login successful!');\n//         } else {\n//           setMessage('‚ùå Invalid email or password!');\n//         }\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-wrapper\">\n//       <div className=\"login-container\">\n//         <div className=\"logo-circle\">PB</div>\n//         <h1 className=\"brand-name\">policybazaar</h1>\n\n//         <div className=\"welcome-text\">\n//           <h2>Welcome to policybazaar</h2>\n//           <p>Login or create an account to manage your scheduling journey</p>\n//         </div>\n\n//         <div className=\"tabs\">\n//           <button\n//             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\n//             onClick={() => setActiveTab('login')}\n//           >\n//             Login\n//           </button>\n//           <button\n//             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\n//             onClick={() => setActiveTab('register')}\n//           >\n//             Register\n//           </button>\n//         </div>\n\n//         <form onSubmit={handleSubmit} className=\"form\">\n//           <div className=\"input-group\">\n//             <span className=\"input-icon\">üìß</span>\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               value={email}\n//               required\n//               onChange={(e) => setEmail(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"input-group\">\n//             <span className=\"input-icon\">üîí</span>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               required\n//               onChange={(e) => setPassword(e.target.value)}\n//             />\n//           </div>\n\n//           <div className=\"form-options\">\n//             <label className=\"remember-me\">\n//               <input type=\"checkbox\" /> I agree to the terms and conditions\n//             </label>\n//           </div>\n\n//           <button type=\"submit\" className=\"login-button\" disabled={loading}>\n//             <span className=\"button-icon\">üîì</span>\n//             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\n//           </button>\n//         </form>\n\n//         {message && (\n//           <p\n//             style={{\n//               textAlign: 'center',\n//               color: message.includes('‚úÖ') ? 'green' : 'red',\n//               marginTop: '10px',\n//             }}\n//           >\n//             {message}\n//           </p>\n//         )}\n\n//         <div className=\"footer\">\n//           <p>\n//             By using policybazaar, you agree to our{' '}\n//             <a href=\"#terms\">Terms of Service</a> and{' '}\n//             <a href=\"#privacy\">Privacy Policy</a>.\n//           </p>\n//         </div>\n\n//         <div className=\"tags\">\n//           <span className=\"tag\">Secure login</span>\n//           <span className=\"tag\">Data privacy</span>\n//           <span className=\"tag\">Personalized scheduling</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport AuthABI from '../contracts/AuthContract.json'; // Ensure this file exports the ABI correctly\nimport './Login.css';\nimport { generateHash } from '../utils/hash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512';\nfunction Login() {\n  _s();\n  const [activeTab, setActiveTab] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const hash = await generateHash(email, password);\n    setLoading(true);\n    setMessage('');\n    try {\n      if (!window.ethereum) {\n        throw new Error('MetaMask is not installed!');\n      }\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const signer = await provider.getSigner();\n\n      // Check network\n      const network = await provider.getNetwork();\n      let contract; // Declare contract variable in the correct scope\n      if (Number(network.chainId) !== 1) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{\n              chainId: '0x1'\n            }] // Ethereum Mainnet\n          });\n          // Refresh provider after network switch\n          const updatedProvider = new ethers.BrowserProvider(window.ethereum);\n          const updatedSigner = await updatedProvider.getSigner();\n\n          // Debug ABI\n          console.log('AuthABI:', AuthABI);\n          console.log('AuthABI.abi:', AuthABI.abi);\n\n          // Check if AuthABI.abi exists\n          if (!AuthABI || !AuthABI.abi) {\n            throw new Error('AuthABI.abi is undefined. Check the AuthContract.json file.');\n          }\n          contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, updatedSigner);\n        } catch (switchError) {\n          throw new Error('Failed to switch to Ethereum Mainnet. Please switch manually in MetaMask.');\n        }\n      } else {\n        // Debug ABI\n        console.log('AuthABI:', AuthABI);\n        console.log('AuthABI.abi:', AuthABI.abi);\n\n        // Check if AuthABI.abi exists\n        if (!AuthABI || !AuthABI.abi) {\n          throw new Error('AuthABI.abi is undefined. Check the AuthContract.json file.');\n        }\n        contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\n      }\n      if (!contract) {\n        throw new Error('Failed to initialize contract. Check ABI and contract address.');\n      }\n      console.log('Email:', email);\n      console.log('Generated hash:', hash);\n      if (activeTab === 'register') {\n        const tx = await contract.register(email, hash, {\n          gasLimit: 300000\n        });\n        await tx.wait();\n        setMessage('‚úÖ Successfully registered on the blockchain!');\n      } else if (activeTab === 'login') {\n        const loginSuccess = await contract.login(email, hash);\n        if (loginSuccess) {\n          setMessage('‚úÖ Login successful!');\n        } else {\n          setMessage('‚ùå Invalid email or password!');\n        }\n      }\n    } catch (error) {\n      console.error('Contract interaction error:', error);\n      setMessage(`‚ùó Error: ${error.message}. Check MetaMask & console.`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-circle\",\n        children: \"PB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"brand-name\",\n        children: \"policybazaar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to policybazaar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Login or create an account to manage your scheduling journey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'login' ? 'active' : ''}`,\n          onClick: () => setActiveTab('login'),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'register' ? 'active' : ''}`,\n          onClick: () => setActiveTab('register'),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-icon\",\n            children: \"\\uD83D\\uDCE7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            required: true,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-icon\",\n            children: \"\\uD83D\\uDD12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            required: true,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-options\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"remember-me\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 15\n            }, this), \" I agree to the terms and conditions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          disabled: loading,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"button-icon\",\n            children: \"\\uD83D\\uDD13\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          color: message.includes('‚úÖ') ? 'green' : 'red',\n          marginTop: '10px'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"By using policybazaar, you agree to our\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#terms\",\n            children: \"Terms of Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this), \" and\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#privacy\",\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 13\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag\",\n          children: \"Secure login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag\",\n          children: \"Data privacy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag\",\n          children: \"Personalized scheduling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 538,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"JeW6da8tEjf+1N9HBvRHDWGpL78=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","ethers","AuthABI","generateHash","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","Login","_s","activeTab","setActiveTab","email","setEmail","password","setPassword","message","setMessage","loading","setLoading","handleSubmit","e","preventDefault","hash","window","ethereum","Error","provider","BrowserProvider","request","method","signer","getSigner","network","getNetwork","contract","Number","chainId","params","updatedProvider","updatedSigner","console","log","abi","Contract","switchError","tx","register","gasLimit","wait","loginSuccess","login","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","required","onChange","target","disabled","style","textAlign","color","includes","marginTop","href","_c","$RefreshReg$"],"sources":["C:/Users/Prathika/OneDrive/Desktop/health/healthcare-platform/frontend/src/pages/Login.js"],"sourcesContent":["\r\n\r\n\r\n\r\n// // // import React, { useState } from 'react';\r\n// // // import { ethers } from 'ethers';\r\n// // // import AuthABI from '../contracts/AuthContract.json';\r\n// // // import './Login.css';\r\n// // // import { generateHash } from '../utils/hash'; // ‚úÖ Hash function\r\n\r\n// // // const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Your deployed contract\r\n\r\n// // // function Login() {\r\n// // //   const [activeTab, setActiveTab] = useState('login');\r\n// // //   const [email, setEmail] = useState('');\r\n// // //   const [password, setPassword] = useState('');\r\n// // //   const [message, setMessage] = useState('');\r\n// // //   const [loading, setLoading] = useState(false);\r\n\r\n// // //   const handleSubmit = async (e) => {\r\n// // //     e.preventDefault();\r\n// // //     const hash = await generateHash(email, password);\r\n// // //     setLoading(true);\r\n// // //     setMessage('');\r\n\r\n// // //     try {\r\n// // //       if (!window.ethereum) {\r\n// // //         throw new Error('MetaMask is not installed!');\r\n// // //       }\r\n\r\n// // //       // ‚úÖ Use MetaMask-connected Web3 provider\r\n// // //       const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n// // //       await provider.send(\"eth_requestAccounts\", []);\r\n// // //       const signer = provider.getSigner();\r\n// // //       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\r\n\r\n// // //       if (activeTab === 'register') {\r\n// // //         const tx = await contract.register(email, hash);\r\n// // //         await tx.wait();  // Wait for the transaction to be mined\r\n// // //         setMessage('‚úÖ Successfully registered on the blockchain!');\r\n// // //       } else if (activeTab === 'login') {\r\n// // //         const loginSuccess = await contract.login(email, hash);  // Should return boolean\r\n// // //         if (loginSuccess) {\r\n// // //           setMessage('‚úÖ Login successful!');\r\n// // //         } else {\r\n// // //           setMessage('‚ùå Invalid email or password!');\r\n// // //         }\r\n// // //       }\r\n// // //     } catch (error) {\r\n// // //       console.error(error);\r\n// // //       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\r\n// // //     } finally {\r\n// // //       setLoading(false);\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <div className=\"login-wrapper\">\r\n// // //       <div className=\"login-container\">\r\n// // //         <div className=\"logo-circle\">PB</div>\r\n// // //         <h1 className=\"brand-name\">policybazaar</h1>\r\n\r\n// // //         <div className=\"welcome-text\">\r\n// // //           <h2>Welcome to policybazaar</h2>\r\n// // //           <p>Login or create an account to manage your scheduling journey</p>\r\n// // //         </div>\r\n\r\n// // //         <div className=\"tabs\">\r\n// // //           <button\r\n// // //             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\r\n// // //             onClick={() => setActiveTab('login')}\r\n// // //           >\r\n// // //             Login\r\n// // //           </button>\r\n// // //           <button\r\n// // //             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\r\n// // //             onClick={() => setActiveTab('register')}\r\n// // //           >\r\n// // //             Register\r\n// // //           </button>\r\n// // //         </div>\r\n\r\n// // //         <form onSubmit={handleSubmit} className=\"form\">\r\n// // //           <div className=\"input-group\">\r\n// // //             <span className=\"input-icon\">üìß</span>\r\n// // //             <input\r\n// // //               type=\"email\"\r\n// // //               placeholder=\"Email\"\r\n// // //               value={email}\r\n// // //               required\r\n// // //               onChange={(e) => setEmail(e.target.value)}\r\n// // //             />\r\n// // //           </div>\r\n// // //           <div className=\"input-group\">\r\n// // //             <span className=\"input-icon\">üîí</span>\r\n// // //             <input\r\n// // //               type=\"password\"\r\n// // //               placeholder=\"Password\"\r\n// // //               value={password}\r\n// // //               required\r\n// // //               onChange={(e) => setPassword(e.target.value)}\r\n// // //             />\r\n// // //           </div>\r\n\r\n// // //           <div className=\"form-options\">\r\n// // //             <label className=\"remember-me\">\r\n// // //               <input type=\"checkbox\" /> I agree to the terms and conditions\r\n// // //             </label>\r\n// // //           </div>\r\n\r\n// // //           <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n// // //             <span className=\"button-icon\">üîì</span>\r\n// // //             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\r\n// // //           </button>\r\n// // //         </form>\r\n\r\n// // //         {message && (\r\n// // //           <p\r\n// // //             style={{\r\n// // //               textAlign: 'center',\r\n// // //               color: message.includes('‚úÖ') ? 'green' : 'red',\r\n// // //               marginTop: '10px',\r\n// // //             }}\r\n// // //           >\r\n// // //             {message}\r\n// // //           </p>\r\n// // //         )}\r\n\r\n// // //         <div className=\"footer\">\r\n// // //           <p>\r\n// // //             By using policybazaar, you agree to our{' '}\r\n// // //             <a href=\"#terms\">Terms of Service</a> and{' '}\r\n// // //             <a href=\"#privacy\">Privacy Policy</a>.\r\n// // //           </p>\r\n// // //         </div>\r\n\r\n// // //         <div className=\"tags\">\r\n// // //           <span className=\"tag\">Secure login</span>\r\n// // //           <span className=\"tag\">Data privacy</span>\r\n// // //           <span className=\"tag\">Personalized scheduling</span>\r\n// // //         </div>\r\n// // //       </div>\r\n// // //     </div>\r\n// // //   );\r\n// // // }\r\n\r\n// // // export default Login;\r\n\r\n\r\n// // import React, { useState } from 'react';\r\n// // import { ethers } from 'ethers';  // ‚úÖ Updated import for ethers\r\n// // import AuthABI from '../contracts/AuthContract.json';\r\n// // import './Login.css';\r\n// // import { generateHash } from '../utils/hash'; // ‚úÖ Hash function\r\n\r\n// // const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Your deployed contract\r\n\r\n// // function Login() {\r\n// //   const [activeTab, setActiveTab] = useState('login');\r\n// //   const [email, setEmail] = useState('');\r\n// //   const [password, setPassword] = useState('');\r\n// //   const [message, setMessage] = useState('');\r\n// //   const [loading, setLoading] = useState(false);\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     const hash = await generateHash(email, password);\r\n// //     setLoading(true);\r\n// //     setMessage('');\r\n\r\n// //     try {\r\n// //       if (!window.ethereum) {\r\n// //         throw new Error('MetaMask is not installed!');\r\n// //       }\r\n\r\n// //       // ‚úÖ Use MetaMask-connected Web3 provider (Updated syntax for ethers v6)\r\n// //       const provider = new ethers.Web3Provider(window.ethereum);\r\n// //       await provider.send(\"eth_requestAccounts\", []);\r\n// //       const signer = provider.getSigner();\r\n// //       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\r\n\r\n// //       if (activeTab === 'register') {\r\n// //         const tx = await contract.register(email, hash);\r\n// //         await tx.wait();  // Wait for the transaction to be mined\r\n// //         setMessage('‚úÖ Successfully registered on the blockchain!');\r\n// //       } else if (activeTab === 'login') {\r\n// //         const loginSuccess = await contract.login(email, hash);  // Should return boolean\r\n// //         if (loginSuccess) {\r\n// //           setMessage('‚úÖ Login successful!');\r\n// //         } else {\r\n// //           setMessage('‚ùå Invalid email or password!');\r\n// //         }\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error(error);\r\n// //       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"login-wrapper\">\r\n// //       <div className=\"login-container\">\r\n// //         <div className=\"logo-circle\">PB</div>\r\n// //         <h1 className=\"brand-name\">policybazaar</h1>\r\n\r\n// //         <div className=\"welcome-text\">\r\n// //           <h2>Welcome to policybazaar</h2>\r\n// //           <p>Login or create an account to manage your scheduling journey</p>\r\n// //         </div>\r\n\r\n// //         <div className=\"tabs\">\r\n// //           <button\r\n// //             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\r\n// //             onClick={() => setActiveTab('login')}\r\n// //           >\r\n// //             Login\r\n// //           </button>\r\n// //           <button\r\n// //             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\r\n// //             onClick={() => setActiveTab('register')}\r\n// //           >\r\n// //             Register\r\n// //           </button>\r\n// //         </div>\r\n\r\n// //         <form onSubmit={handleSubmit} className=\"form\">\r\n// //           <div className=\"input-group\">\r\n// //             <span className=\"input-icon\">üìß</span>\r\n// //             <input\r\n// //               type=\"email\"\r\n// //               placeholder=\"Email\"\r\n// //               value={email}\r\n// //               required\r\n// //               onChange={(e) => setEmail(e.target.value)}\r\n// //             />\r\n// //           </div>\r\n// //           <div className=\"input-group\">\r\n// //             <span className=\"input-icon\">üîí</span>\r\n// //             <input\r\n// //               type=\"password\"\r\n// //               placeholder=\"Password\"\r\n// //               value={password}\r\n// //               required\r\n// //               onChange={(e) => setPassword(e.target.value)}\r\n// //             />\r\n// //           </div>\r\n\r\n// //           <div className=\"form-options\">\r\n// //             <label className=\"remember-me\">\r\n// //               <input type=\"checkbox\" /> I agree to the terms and conditions\r\n// //             </label>\r\n// //           </div>\r\n\r\n// //           <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n// //             <span className=\"button-icon\">üîì</span>\r\n// //             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\r\n// //           </button>\r\n// //         </form>\r\n\r\n// //         {message && (\r\n// //           <p\r\n// //             style={{\r\n// //               textAlign: 'center',\r\n// //               color: message.includes('‚úÖ') ? 'green' : 'red',\r\n// //               marginTop: '10px',\r\n// //             }}\r\n// //           >\r\n// //             {message}\r\n// //           </p>\r\n// //         )}\r\n\r\n// //         <div className=\"footer\">\r\n// //           <p>\r\n// //             By using policybazaar, you agree to our{' '}\r\n// //             <a href=\"#terms\">Terms of Service</a> and{' '}\r\n// //             <a href=\"#privacy\">Privacy Policy</a>.\r\n// //           </p>\r\n// //         </div>\r\n\r\n// //         <div className=\"tags\">\r\n// //           <span className=\"tag\">Secure login</span>\r\n// //           <span className=\"tag\">Data privacy</span>\r\n// //           <span className=\"tag\">Personalized scheduling</span>\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default Login;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { ethers } from 'ethers';  // ‚úÖ Updated import for ethers\r\n// import AuthABI from '../contracts/AuthContract.json';\r\n// import './Login.css';\r\n// import { generateHash } from '../utils/hash'; // ‚úÖ Hash function\r\n\r\n// const CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'; // ‚úÖ Your deployed contract\r\n\r\n// function Login() {\r\n//   const [activeTab, setActiveTab] = useState('login');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const hash = await generateHash(email, password);\r\n//     setLoading(true);\r\n//     setMessage('');\r\n\r\n//     try {\r\n//       if (!window.ethereum) {\r\n//         throw new Error('MetaMask is not installed!');\r\n//       }\r\n\r\n//       // ‚úÖ Use MetaMask-connected provider (Updated for ethers v6: Web3Provider -> BrowserProvider)\r\n//       const provider = new ethers.BrowserProvider(window.ethereum);\r\n//       await window.ethereum.request({ method: 'eth_requestAccounts' }); // Request account access\r\n//       const signer = await provider.getSigner(); // Updated syntax for v6\r\n//       const contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\r\n\r\n//       if (activeTab === 'register') {\r\n//         const tx = await contract.register(email, hash);\r\n//         await tx.wait();  // Wait for the transaction to be mined\r\n//         setMessage('‚úÖ Successfully registered on the blockchain!');\r\n//       } else if (activeTab === 'login') {\r\n//         const loginSuccess = await contract.login(email, hash);  // Should return boolean\r\n//         if (loginSuccess) {\r\n//           setMessage('‚úÖ Login successful!');\r\n//         } else {\r\n//           setMessage('‚ùå Invalid email or password!');\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       setMessage('‚ùó Error interacting with the contract. Check MetaMask & console.');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-wrapper\">\r\n//       <div className=\"login-container\">\r\n//         <div className=\"logo-circle\">PB</div>\r\n//         <h1 className=\"brand-name\">policybazaar</h1>\r\n\r\n//         <div className=\"welcome-text\">\r\n//           <h2>Welcome to policybazaar</h2>\r\n//           <p>Login or create an account to manage your scheduling journey</p>\r\n//         </div>\r\n\r\n//         <div className=\"tabs\">\r\n//           <button\r\n//             className={`tab ${activeTab === 'login' ? 'active' : ''}`}\r\n//             onClick={() => setActiveTab('login')}\r\n//           >\r\n//             Login\r\n//           </button>\r\n//           <button\r\n//             className={`tab ${activeTab === 'register' ? 'active' : ''}`}\r\n//             onClick={() => setActiveTab('register')}\r\n//           >\r\n//             Register\r\n//           </button>\r\n//         </div>\r\n\r\n//         <form onSubmit={handleSubmit} className=\"form\">\r\n//           <div className=\"input-group\">\r\n//             <span className=\"input-icon\">üìß</span>\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"Email\"\r\n//               value={email}\r\n//               required\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <span className=\"input-icon\">üîí</span>\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Password\"\r\n//               value={password}\r\n//               required\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-options\">\r\n//             <label className=\"remember-me\">\r\n//               <input type=\"checkbox\" /> I agree to the terms and conditions\r\n//             </label>\r\n//           </div>\r\n\r\n//           <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n//             <span className=\"button-icon\">üîì</span>\r\n//             {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\r\n//           </button>\r\n//         </form>\r\n\r\n//         {message && (\r\n//           <p\r\n//             style={{\r\n//               textAlign: 'center',\r\n//               color: message.includes('‚úÖ') ? 'green' : 'red',\r\n//               marginTop: '10px',\r\n//             }}\r\n//           >\r\n//             {message}\r\n//           </p>\r\n//         )}\r\n\r\n//         <div className=\"footer\">\r\n//           <p>\r\n//             By using policybazaar, you agree to our{' '}\r\n//             <a href=\"#terms\">Terms of Service</a> and{' '}\r\n//             <a href=\"#privacy\">Privacy Policy</a>.\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"tags\">\r\n//           <span className=\"tag\">Secure login</span>\r\n//           <span className=\"tag\">Data privacy</span>\r\n//           <span className=\"tag\">Personalized scheduling</span>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\nimport React, { useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport AuthABI from '../contracts/AuthContract.json'; // Ensure this file exports the ABI correctly\r\nimport './Login.css';\r\nimport { generateHash } from '../utils/hash';\r\n\r\nconst CONTRACT_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512';\r\n\r\nfunction Login() {\r\n  const [activeTab, setActiveTab] = useState('login');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const hash = await generateHash(email, password);\r\n    setLoading(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      if (!window.ethereum) {\r\n        throw new Error('MetaMask is not installed!');\r\n      }\r\n\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      const signer = await provider.getSigner();\r\n\r\n      // Check network\r\n      const network = await provider.getNetwork();\r\n      let contract; // Declare contract variable in the correct scope\r\n      if (Number(network.chainId) !== 1) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_switchEthereumChain',\r\n            params: [{ chainId: '0x1' }], // Ethereum Mainnet\r\n          });\r\n          // Refresh provider after network switch\r\n          const updatedProvider = new ethers.BrowserProvider(window.ethereum);\r\n          const updatedSigner = await updatedProvider.getSigner();\r\n\r\n          // Debug ABI\r\n          console.log('AuthABI:', AuthABI);\r\n          console.log('AuthABI.abi:', AuthABI.abi);\r\n\r\n          // Check if AuthABI.abi exists\r\n          if (!AuthABI || !AuthABI.abi) {\r\n            throw new Error('AuthABI.abi is undefined. Check the AuthContract.json file.');\r\n          }\r\n\r\n          contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, updatedSigner);\r\n        } catch (switchError) {\r\n          throw new Error('Failed to switch to Ethereum Mainnet. Please switch manually in MetaMask.');\r\n        }\r\n      } else {\r\n        // Debug ABI\r\n        console.log('AuthABI:', AuthABI);\r\n        console.log('AuthABI.abi:', AuthABI.abi);\r\n\r\n        // Check if AuthABI.abi exists\r\n        if (!AuthABI || !AuthABI.abi) {\r\n          throw new Error('AuthABI.abi is undefined. Check the AuthContract.json file.');\r\n        }\r\n\r\n        contract = new ethers.Contract(CONTRACT_ADDRESS, AuthABI.abi, signer);\r\n      }\r\n\r\n      if (!contract) {\r\n        throw new Error('Failed to initialize contract. Check ABI and contract address.');\r\n      }\r\n\r\n      console.log('Email:', email);\r\n      console.log('Generated hash:', hash);\r\n\r\n      if (activeTab === 'register') {\r\n        const tx = await contract.register(email, hash, { gasLimit: 300000 });\r\n        await tx.wait();\r\n        setMessage('‚úÖ Successfully registered on the blockchain!');\r\n      } else if (activeTab === 'login') {\r\n        const loginSuccess = await contract.login(email, hash);\r\n        if (loginSuccess) {\r\n          setMessage('‚úÖ Login successful!');\r\n        } else {\r\n          setMessage('‚ùå Invalid email or password!');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Contract interaction error:', error);\r\n      setMessage(`‚ùó Error: ${error.message}. Check MetaMask & console.`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-wrapper\">\r\n      <div className=\"login-container\">\r\n        <div className=\"logo-circle\">PB</div>\r\n        <h1 className=\"brand-name\">policybazaar</h1>\r\n\r\n        <div className=\"welcome-text\">\r\n          <h2>Welcome to policybazaar</h2>\r\n          <p>Login or create an account to manage your scheduling journey</p>\r\n        </div>\r\n\r\n        <div className=\"tabs\">\r\n          <button\r\n            className={`tab ${activeTab === 'login' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('login')}\r\n          >\r\n            Login\r\n          </button>\r\n          <button\r\n            className={`tab ${activeTab === 'register' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('register')}\r\n          >\r\n            Register\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"form\">\r\n          <div className=\"input-group\">\r\n            <span className=\"input-icon\">üìß</span>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              required\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <span className=\"input-icon\">üîí</span>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              required\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-options\">\r\n            <label className=\"remember-me\">\r\n              <input type=\"checkbox\" /> I agree to the terms and conditions\r\n            </label>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n            <span className=\"button-icon\">üîì</span>\r\n            {loading ? 'Processing...' : activeTab === 'login' ? 'Login' : 'Create account'}\r\n          </button>\r\n        </form>\r\n\r\n        {message && (\r\n          <p\r\n            style={{\r\n              textAlign: 'center',\r\n              color: message.includes('‚úÖ') ? 'green' : 'red',\r\n              marginTop: '10px',\r\n            }}\r\n          >\r\n            {message}\r\n          </p>\r\n        )}\r\n\r\n        <div className=\"footer\">\r\n          <p>\r\n            By using policybazaar, you agree to our{' '}\r\n            <a href=\"#terms\">Terms of Service</a> and{' '}\r\n            <a href=\"#privacy\">Privacy Policy</a>.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"tags\">\r\n          <span className=\"tag\">Secure login</span>\r\n          <span className=\"tag\">Data privacy</span>\r\n          <span className=\"tag\">Personalized scheduling</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":";;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,OAAO,MAAM,gCAAgC,CAAC,CAAC;AACtD,OAAO,aAAa;AACpB,SAASC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,gBAAgB,GAAG,4CAA4C;AAErE,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EACnD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}